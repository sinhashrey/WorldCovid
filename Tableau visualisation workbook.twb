<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='ContinentsDeath' inline='true' name='federated.0wlazcx1rpy03f1dc1gog1w8zkr7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1722a9219fcocp18p6wgt00a5zlr'>
            <connection class='mysql' dbname='world_covid' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.1722a9219fcocp18p6wgt00a5zlr' name='Custom SQL Query' type='text'>SELECT continent, SUM(new_deaths) AS TotalDeaths&#13;
FROM coviddeaths&#13;
WHERE continent IS NOT NULL&#13;
GROUP BY continent&#13;
ORDER BY TotalDeaths DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.1722a9219fcocp18p6wgt00a5zlr' name='Custom SQL Query' type='text'>SELECT continent, SUM(new_deaths) AS TotalDeaths&#13;
FROM coviddeaths&#13;
WHERE continent IS NOT NULL&#13;
GROUP BY continent&#13;
ORDER BY TotalDeaths DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FD9D2268918446DB95D4FC5FC0AE3E4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FD9D2268918446DB95D4FC5FC0AE3E4F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_FD9D2268918446DB95D4FC5FC0AE3E4F]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_FD9D2268918446DB95D4FC5FC0AE3E4F'>
            <properties context=''>
              <relation connection='mysql.1722a9219fcocp18p6wgt00a5zlr' name='Custom SQL Query' type='text'>SELECT continent, SUM(new_deaths) AS TotalDeaths&#13;
FROM coviddeaths&#13;
WHERE continent IS NOT NULL&#13;
GROUP BY continent&#13;
ORDER BY TotalDeaths DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='InfectionCountries' inline='true' name='federated.1p4toav1c6hwic12qvhgf1vpdbcr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.09pe7zw1f640gb141zeeu1pqrz1v'>
            <connection class='mysql' dbname='world_covid' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.09pe7zw1f640gb141zeeu1pqrz1v' name='Custom SQL Query' type='text'>SELECT Location,&#13;
       Population,&#13;
       MAX(total_cases)                      AS NumberOfInfections,&#13;
       Max((total_cases / population)) * 100 AS PercentInfected&#13;
FROM coviddeaths&#13;
GROUP BY Location, Population&#13;
ORDER BY PercentInfected DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.09pe7zw1f640gb141zeeu1pqrz1v' name='Custom SQL Query' type='text'>SELECT Location,&#13;
       Population,&#13;
       MAX(total_cases)                      AS NumberOfInfections,&#13;
       Max((total_cases / population)) * 100 AS PercentInfected&#13;
FROM coviddeaths&#13;
GROUP BY Location, Population&#13;
ORDER BY PercentInfected DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C97683BDB21B4794B6B20A82A483A9D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C97683BDB21B4794B6B20A82A483A9D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfInfections</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfInfections]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>NumberOfInfections</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C97683BDB21B4794B6B20A82A483A9D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentInfected</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PercentInfected]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PercentInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C97683BDB21B4794B6B20A82A483A9D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
        </semantic-values>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_C97683BDB21B4794B6B20A82A483A9D9]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='230' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_C97683BDB21B4794B6B20A82A483A9D9'>
            <properties context=''>
              <relation connection='mysql.09pe7zw1f640gb141zeeu1pqrz1v' name='Custom SQL Query' type='text'>SELECT Location,&#13;
       Population,&#13;
       MAX(total_cases)                      AS NumberOfInfections,&#13;
       Max((total_cases / population)) * 100 AS PercentInfected&#13;
FROM coviddeaths&#13;
GROUP BY Location, Population&#13;
ORDER BY PercentInfected DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='InfectionsCountryDate' inline='true' name='federated.0tp1s1u0f9z4g711ymsyy1i1z0en' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1v7nep51el5n691dfi5i90v0fk7l'>
            <connection class='mysql' dbname='world_covid' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.1v7nep51el5n691dfi5i90v0fk7l' name='Custom SQL Query' type='text'>SELECT Location,&#13;
       Population,&#13;
       date,&#13;
       MAX(total_cases)                      AS NumberOfInfections,&#13;
       Max((total_cases / population)) * 100 AS PercentInfected&#13;
FROM coviddeaths&#13;
GROUP BY Location, Population, date&#13;
ORDER BY PercentInfected DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.1v7nep51el5n691dfi5i90v0fk7l' name='Custom SQL Query' type='text'>SELECT Location,&#13;
       Population,&#13;
       date,&#13;
       MAX(total_cases)                      AS NumberOfInfections,&#13;
       Max((total_cases / population)) * 100 AS PercentInfected&#13;
FROM coviddeaths&#13;
GROUP BY Location, Population, date&#13;
ORDER BY PercentInfected DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4FE9BCDE78414A7B8A1A8060F83B8209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4FE9BCDE78414A7B8A1A8060F83B8209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4FE9BCDE78414A7B8A1A8060F83B8209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfInfections</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NumberOfInfections]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>NumberOfInfections</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4FE9BCDE78414A7B8A1A8060F83B8209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentInfected</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PercentInfected]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PercentInfected</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4FE9BCDE78414A7B8A1A8060F83B8209]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_4FE9BCDE78414A7B8A1A8060F83B8209]' role='measure' type='quantitative' />
      <column datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_4FE9BCDE78414A7B8A1A8060F83B8209'>
            <properties context=''>
              <relation connection='mysql.1v7nep51el5n691dfi5i90v0fk7l' name='Custom SQL Query' type='text'>SELECT Location,&#13;
       Population,&#13;
       date,&#13;
       MAX(total_cases)                      AS NumberOfInfections,&#13;
       Max((total_cases / population)) * 100 AS PercentInfected&#13;
FROM coviddeaths&#13;
GROUP BY Location, Population, date&#13;
ORDER BY PercentInfected DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='World Vaccination' inline='true' name='federated.0bovclj19cz0eh1gkx8s90fm7ug1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.17dhc4e1oq6cfr18osjyv1lgnrco'>
            <connection class='mysql' dbname='world_covid' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.17dhc4e1oq6cfr18osjyv1lgnrco' name='Custom SQL Query' type='text'>SELECT covidvaccinations.location,&#13;
       (sum(new_vaccinations) / coviddeaths.population) * 100 AS VaccinationsPer100,&#13;
       (max(people_vaccinated) / coviddeaths.population) * 100 AS FirstDosagePercent,&#13;
       (max(people_fully_vaccinated) / coviddeaths.population) * 100 AS SecondDosagePercent,&#13;
       (max(total_boosters) / coviddeaths.population) * 100 AS BoosterDosagePercent&#13;
FROM covidvaccinations&#13;
         INNER JOIN coviddeaths&#13;
                    ON covidvaccinations.location = coviddeaths.location AND covidvaccinations.date = coviddeaths.date&#13;
WHERE covidvaccinations.continent IS NOT NULL&#13;
GROUP BY covidvaccinations.location&#13;
ORDER BY VaccinationsPer100 DESC</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.17dhc4e1oq6cfr18osjyv1lgnrco' name='Custom SQL Query' type='text'>SELECT covidvaccinations.location,&#13;
       (sum(new_vaccinations) / coviddeaths.population) * 100 AS VaccinationsPer100,&#13;
       (max(people_vaccinated) / coviddeaths.population) * 100 AS FirstDosagePercent,&#13;
       (max(people_fully_vaccinated) / coviddeaths.population) * 100 AS SecondDosagePercent,&#13;
       (max(total_boosters) / coviddeaths.population) * 100 AS BoosterDosagePercent&#13;
FROM covidvaccinations&#13;
         INNER JOIN coviddeaths&#13;
                    ON covidvaccinations.location = coviddeaths.location AND covidvaccinations.date = coviddeaths.date&#13;
WHERE covidvaccinations.continent IS NOT NULL&#13;
GROUP BY covidvaccinations.location&#13;
ORDER BY VaccinationsPer100 DESC</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_E15B1CB72C044B4DB77DD9EBFF49438E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VaccinationsPer100</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VaccinationsPer100]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>VaccinationsPer100</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>48</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_E15B1CB72C044B4DB77DD9EBFF49438E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FirstDosagePercent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[FirstDosagePercent]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>FirstDosagePercent</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>26</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_E15B1CB72C044B4DB77DD9EBFF49438E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SecondDosagePercent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[SecondDosagePercent]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>SecondDosagePercent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>26</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_E15B1CB72C044B4DB77DD9EBFF49438E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BoosterDosagePercent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BoosterDosagePercent]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>BoosterDosagePercent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>26</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_E15B1CB72C044B4DB77DD9EBFF49438E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Vaccinations Per 100' datatype='real' name='[VaccinationsPer100]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_E15B1CB72C044B4DB77DD9EBFF49438E]' role='measure' type='quantitative' />
      <column caption='Countries' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
        </semantic-values>
      </column>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='229' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_E15B1CB72C044B4DB77DD9EBFF49438E'>
            <properties context=''>
              <relation connection='mysql.17dhc4e1oq6cfr18osjyv1lgnrco' name='Custom SQL Query' type='text'>SELECT covidvaccinations.location,&#13;
       (sum(new_vaccinations) / coviddeaths.population) * 100 AS VaccinationsPer100,&#13;
       (max(people_vaccinated) / coviddeaths.population) * 100 AS FirstDosagePercent,&#13;
       (max(people_fully_vaccinated) / coviddeaths.population) * 100 AS SecondDosagePercent,&#13;
       (max(total_boosters) / coviddeaths.population) * 100 AS BoosterDosagePercent&#13;
FROM covidvaccinations&#13;
         INNER JOIN coviddeaths&#13;
                    ON covidvaccinations.location = coviddeaths.location AND covidvaccinations.date = coviddeaths.date&#13;
WHERE covidvaccinations.continent IS NOT NULL&#13;
GROUP BY covidvaccinations.location&#13;
ORDER BY VaccinationsPer100 DESC</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Overall Stat' inline='true' name='federated.0smt5w7109c0h919b4kmi062bq7i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.010mxa404b9iqt1eydniw1e7prhi'>
            <connection class='mysql' dbname='world_covid' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.010mxa404b9iqt1eydniw1e7prhi' name='Custom SQL Query' type='text'>SELECT SUM(new_cases)                         AS total_cases,&#13;
       SUM(new_deaths)                        AS total_deaths,&#13;
       SUM(new_deaths) / SUM(New_Cases)       AS DeathPercent,&#13;
       (SELECT max(people_vaccinated_per_hundred)/100 FROM covidvaccinations WHERE location = &apos;World&apos;) as VaccinatedPeoplePercent&#13;
FROM coviddeaths&#13;
    INNER JOIN covidvaccinations&#13;
                    ON covidvaccinations.location = coviddeaths.location AND covidvaccinations.date = coviddeaths.date&#13;
WHERE coviddeaths.continent IS NOT NULL</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.010mxa404b9iqt1eydniw1e7prhi' name='Custom SQL Query' type='text'>SELECT SUM(new_cases)                         AS total_cases,&#13;
       SUM(new_deaths)                        AS total_deaths,&#13;
       SUM(new_deaths) / SUM(New_Cases)       AS DeathPercent,&#13;
       (SELECT max(people_vaccinated_per_hundred)/100 FROM covidvaccinations WHERE location = &apos;World&apos;) as VaccinatedPeoplePercent&#13;
FROM coviddeaths&#13;
    INNER JOIN covidvaccinations&#13;
                    ON covidvaccinations.location = coviddeaths.location AND covidvaccinations.date = coviddeaths.date&#13;
WHERE coviddeaths.continent IS NOT NULL</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_2CBB124C78F54586BFCF27A8F1003586]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_2CBB124C78F54586BFCF27A8F1003586]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercent</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DeathPercent]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DeathPercent</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>36</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_2CBB124C78F54586BFCF27A8F1003586]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VaccinatedPeoplePercent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VaccinatedPeoplePercent]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>VaccinatedPeoplePercent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_2CBB124C78F54586BFCF27A8F1003586]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mortality Rate' datatype='real' name='[DeathPercent]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[VaccinatedPeoplePercent]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Overall Stat' datatype='table' name='[__tableau_internal_object_id__].[_2CBB124C78F54586BFCF27A8F1003586]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Overall Stat' id='_2CBB124C78F54586BFCF27A8F1003586'>
            <properties context=''>
              <relation connection='mysql.010mxa404b9iqt1eydniw1e7prhi' name='Custom SQL Query' type='text'>SELECT SUM(new_cases)                         AS total_cases,&#13;
       SUM(new_deaths)                        AS total_deaths,&#13;
       SUM(new_deaths) / SUM(New_Cases)       AS DeathPercent,&#13;
       (SELECT max(people_vaccinated_per_hundred)/100 FROM covidvaccinations WHERE location = &apos;World&apos;) as VaccinatedPeoplePercent&#13;
FROM coviddeaths&#13;
    INNER JOIN covidvaccinations&#13;
                    ON covidvaccinations.location = coviddeaths.location AND covidvaccinations.date = coviddeaths.date&#13;
WHERE coviddeaths.continent IS NOT NULL</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0bovclj19cz0eh1gkx8s90fm7ug1'>
      <datasources>
        <datasource caption='World Vaccination' name='federated.0bovclj19cz0eh1gkx8s90fm7ug1' />
      </datasources>
      <datasource-dependencies datasource='federated.0bovclj19cz0eh1gkx8s90fm7ug1'>
        <column caption='Countries' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
            <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[none:location:nk]'>
        <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[none:location:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Global Stats</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Overall Stat' name='federated.0smt5w7109c0h919b4kmi062bq7i' />
          </datasources>
          <datasource-dependencies datasource='federated.0smt5w7109c0h919b4kmi062bq7i'>
            <column caption='Mortality Rate' datatype='real' name='[DeathPercent]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='real' name='[VaccinatedPeoplePercent]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercent]' derivation='Sum' name='[sum:DeathPercent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VaccinatedPeoplePercent]' derivation='Sum' name='[sum:VaccinatedPeoplePercent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0smt5w7109c0h919b4kmi062bq7i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0smt5w7109c0h919b4kmi062bq7i].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0smt5w7109c0h919b4kmi062bq7i].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0smt5w7109c0h919b4kmi062bq7i].[sum:DeathPercent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0smt5w7109c0h919b4kmi062bq7i].[sum:VaccinatedPeoplePercent:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0smt5w7109c0h919b4kmi062bq7i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0smt5w7109c0h919b4kmi062bq7i].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0smt5w7109c0h919b4kmi062bq7i].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0smt5w7109c0h919b4kmi062bq7i].[sum:DeathPercent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0smt5w7109c0h919b4kmi062bq7i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0smt5w7109c0h919b4kmi062bq7i].[:Measure Names]' value='187' />
            <format attr='height' value='60' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0smt5w7109c0h919b4kmi062bq7i].[sum:DeathPercent:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0smt5w7109c0h919b4kmi062bq7i].[sum:VaccinatedPeoplePercent:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0smt5w7109c0h919b4kmi062bq7i].[:Measure Names]' value='32' />
            <format attr='background-color' scope='cols' value='#00557f' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0smt5w7109c0h919b4kmi062bq7i].[:Measure Names]' value='11' />
            <format attr='text-align' field='[federated.0smt5w7109c0h919b4kmi062bq7i].[:Measure Names]' value='center' />
            <format attr='color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#b4b4b4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0smt5w7109c0h919b4kmi062bq7i].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='3.0386741161346436' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0smt5w7109c0h919b4kmi062bq7i].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{FB4366FF-9189-4516-AF97-C0113FCE3CA9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Deaths across Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ContinentsDeath' name='federated.0wlazcx1rpy03f1dc1gog1w8zkr7' />
          </datasources>
          <datasource-dependencies datasource='federated.0wlazcx1rpy03f1dc1gog1w8zkr7'>
            <column datatype='real' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[none:continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[sum:TotalDeaths:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[sum:TotalDeaths:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[sum:TotalDeaths:qk]' scope='rows' value='Total Deaths' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[none:continent:nk]' value='88' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[none:continent:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[sum:TotalDeaths:qk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Continent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[none:continent:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Deaths:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[sum:TotalDeaths:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='412' />
                <format attr='maxheight' value='412' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[sum:TotalDeaths:qk]</rows>
        <cols>[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{D4543D79-D42E-487D-AE0A-1951A200F75A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Infection Percent across Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='InfectionCountries' name='federated.1p4toav1c6hwic12qvhgf1vpdbcr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1p4toav1c6hwic12qvhgf1vpdbcr'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[PercentInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentInfected]' derivation='Sum' name='[sum:PercentInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[Longitude (generated)]' field-type='quantitative' max='-18143404.391524069' min='-57579126.474058799' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[Latitude (generated)]' field-type='quantitative' max='12486977.63533264' min='-3983995.1269576009' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[sum:PercentInfected:qk]' max='50.0' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[sum:PercentInfected:qk]' value='Percent Infected' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[sum:PercentInfected:qk]' />
              <lod column='[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[none:Location:nk]' />
              <tooltip column='[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[sum:PercentInfected:qk]' />
              <geometry column='[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#555555'>Location:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[none:Location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'>Infection % </run>
                <run bold='true' fontcolor='#000000'><![CDATA[:	<[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[sum:PercentInfected:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.7911050319671631' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[Latitude (generated)]</rows>
        <cols>[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D9339C47-87F1-4888-A7B2-9BA17A887E6C}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Infection Percent by weeks and their future predictions for a few countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='InfectionsCountryDate' name='federated.0tp1s1u0f9z4g711ymsyy1i1z0en' />
          </datasources>
          <datasource-dependencies datasource='federated.0tp1s1u0f9z4g711ymsyy1i1z0en'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='real' name='[PercentInfected]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentInfected]' derivation='Max' forecast-column-base='[max:PercentInfected:qk]' forecast-column-type='forecast-value' name='[fVal:max:PercentInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentInfected]' derivation='Max' name='[max:PercentInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[fVal:max:PercentInfected:qk]' scope='rows' value='Percent Infected' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Location:nk]' />
              <text column='[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Location:nk]' />
              <text column='[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[fVal:max:PercentInfected:qk]' />
              <color column='[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Forecast Indicator:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[twk:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percent Infected:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[fVal:max:PercentInfected:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[fVal:max:PercentInfected:qk]</rows>
        <cols>[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[twk:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{71FD26BB-D9E0-421E-9ECF-D991E40C9C0C}' />
    </worksheet>
    <worksheet lock-quick-filters='true' name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Vaccination Dosage across Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World Vaccination' name='federated.0bovclj19cz0eh1gkx8s90fm7ug1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0bovclj19cz0eh1gkx8s90fm7ug1'>
            <column datatype='real' name='[BoosterDosagePercent]' role='measure' type='quantitative' />
            <column datatype='real' name='[FirstDosagePercent]' role='measure' type='quantitative' />
            <column datatype='real' name='[SecondDosagePercent]' role='measure' type='quantitative' />
            <column caption='Vaccinations Per 100' datatype='real' name='[VaccinationsPer100]' role='measure' type='quantitative' />
            <column caption='Countries' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[BoosterDosagePercent]' derivation='Sum' name='[sum:BoosterDosagePercent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FirstDosagePercent]' derivation='Sum' name='[sum:FirstDosagePercent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SecondDosagePercent]' derivation='Sum' name='[sum:SecondDosagePercent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VaccinationsPer100]' derivation='Sum' name='[sum:VaccinationsPer100:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:VaccinationsPer100:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[none:location:nk]</column>
            <column>[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:VaccinationsPer100:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[Longitude (generated)]' field-type='quantitative' max='23345563.391436376' min='-16763256.53978196' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[Latitude (generated)]' field-type='quantitative' max='11183373.808078442' min='-5568729.2530008117' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:VaccinationsPer100:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:VaccinationsPer100:qk]' />
              <lod column='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[none:location:nk]' />
              <tooltip column='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:BoosterDosagePercent:qk]' />
              <tooltip column='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:SecondDosagePercent:qk]' />
              <tooltip column='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:FirstDosagePercent:qk]' />
              <geometry column='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>1st Dose %:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:FirstDosagePercent:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>2nd Dose %:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:SecondDosagePercent:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Booster Dose %:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:BoosterDosagePercent:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[Latitude (generated)]</rows>
        <cols>[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{46F985CB-9E5E-4F64-B624-84219E968F2F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1700' minheight='900' minwidth='1700' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='17' param='horz' type-v2='layout-flow' w='99058' x='471' y='889'>
            <zone h='98222' id='14' param='horz' type-v2='layout-flow' w='99058' x='471' y='889'>
              <zone h='98222' id='9' param='horz' type-v2='layout-flow' w='99058' x='471' y='889'>
                <zone h='98222' id='7' type-v2='layout-basic' w='99058' x='471' y='889'>
                  <zone h='17444' id='3' name='Sheet 1' w='44588' x='471' y='889'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='31667' id='5' name='Sheet 2' w='44588' x='471' y='18333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49111' id='6' name='Sheet 3' w='54470' x='45059' y='889'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49111' id='11' name='Sheet 4' w='44588' x='471' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49111' id='15' name='Sheet 5' w='54470' x='45059' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='18' param='vert' type-v2='layout-flow' w='99058' x='471' y='889'>
                <zone fixed-size='149' h='17444' id='3' is-fixed='true' name='Sheet 1' w='44588' x='471' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='6' is-fixed='true' name='Sheet 3' w='54470' x='45059' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='277' h='31667' id='5' is-fixed='true' name='Sheet 2' w='44588' x='471' y='18333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='11' is-fixed='true' name='Sheet 4' w='44588' x='471' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='15' is-fixed='true' name='Sheet 5' w='54470' x='45059' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D1648984-F8B7-47CC-821D-D882A794F0C9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='141'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0smt5w7109c0h919b4kmi062bq7i].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1522480D-329E-44A5-987B-6D52E18BC8B4}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wlazcx1rpy03f1dc1gog1w8zkr7].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBE76D3A-FF3D-44D4-B964-DF6DD4D99813}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[sum:PercentInfected:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p4toav1c6hwic12qvhgf1vpdbcr].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{54213129-157B-4925-AA05-E1107AA8868C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='177'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Location:nk]&#10;[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Forecast Indicator:nk]</field>
            <field>[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Location:nk]</field>
            <field>[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:date:nk]</field>
            <field>[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B5E885EE-F00D-40C7-833C-34DA1AE8244A}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[sum:VaccinationsPer100:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bovclj19cz0eh1gkx8s90fm7ug1].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{61F4B918-883D-4B93-8301-4F2D05904DFE}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Location:nk]&#10;[federated.0tp1s1u0f9z4g711ymsyy1i1z0en].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{F3093E10-3850-4E21-BE6B-08D365E321BE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eXRU153v+zmn5ipVlVSaS/MAQkhIzDMGjMHGhsSOjeMhThy74+TGeUnW
      fele771033bn3U53+nWnc/t2d+JOO3GcOO0hjmMbsMFm8MAMYpCE5nkoSaWSVPNc5/1RICOD
      QBJCGHQ+a2lRnLPP3r99zvmePf323oIkSRIyMrMU8WYbICNzM5EFIDOrkQUgM6uRBSAzq5EF
      IDOrkQVwXUi0N9dTfb6RqCTRePYYdk9kbJDAMIdOnR83hsOHDo3+jkVD1Jw9TXff4I0yWOYz
      yAK4Dl76t/+PUw1dOAc6qWvpoenclQQwMmEB/OJn/4jDE+TEhx/hA/7fH/3oitf84T/+gfN9
      genIwqxHebMNuGUJDdLq1PGXd67k7PlGUpKMdFw49cZLv8DmieGPafjBV+6kte4M//qzFhLz
      l7GxIo2dew/R1dXF9/+fvxkbZzSMw+lh8xe2Mdh4lvqGBv7jV//Fow/cwcuv7sRu6+KBR5/k
      k1O1NHh+hfoLm3nppZexWtO554GvkJ9unPHbcKsjlwDTgK2hiveP1lz4X5jGXjff+fa3yYgO
      0OOFwtKFfOf7f0Hn+WMEfX6C4QgRr52OAfeYeL7953/F3AwDf/s/foghewHzSkp45qlHiQSC
      hEJB1EKE+h4na5eU8cBjT1GUm4HFpCcYltCq5Uc5FeS7NlXUKWTrXby1/yiRSARREC6cUKEX
      /Hx8+AjNwzHS9GDramPf7jcwWUs48uGHzF24mBRzwmVRvv3H1/BGFBj1amKShFoKcfjEWc6f
      OUJC5lyy01MASExK5NTRTxgYcFBUvpgck8TxmtYZzPztgyC7QlwHUozmhvMEBS2lc4sY7u9B
      a7GiFULU1NZRMLcMkzpKR88ATk+A8vklxEI+autbycxIQmdKZ8TeS05uLgA+9zD1zW3kFc4l
      2ZyAzz1EQ1sfleVzqaupJT0zE0mpI8Wspaa6hrw583H2d+IKicwvKUK4hrkylyMLQGZWI1eB
      ZGY1sgBkZjVjukGfe/3gTTJDRmbmyE9N5MkNC4HPCOBvZAHIzALWz88fFcANrwLlJZtudBLT
      jjEhAbNmcrcmO+nzMwiVnGjCoFGRl6S/2aZcGYWKnETdlC7NSk1EPZkLRCU5V7kPiueee+65
      i/+ZTAmwbdVCfv7kZoSwn15vlCKLDtGSyT9uK+dYaz8VhVn4fV7+bONiPmroIi87h79/cCWp
      GoGBoMTcFAM2Z4Blc3OIBPyYTGYyDSrcYVg9x8qg0004NpmcXpuszAye/28PsKnQzLGGXiqL
      rAx5gvz8qa009vRhMpmwJqiw5heRI7jocKnZ+ZcPsmZuHn09vYh6I2k6EV9UZNUcK8OeIP/+
      9fi1X169kGDQj80ZZFVJDl6Ph0D0+jvYfvjYNspMMUKmdP5l+wLerO5hVVEmfcNurMlm8tKS
      +NGXN1DX3ktGajJmpcSShZUIrgHSk0z81UMbaB8YxqASEFRaVLEw96xfw/fWFnFXiZWDzQOX
      5UWjN5CmExn2hydl6/984j42zs9jjlGg1w+ZBhVD/gjL52Qx4nKTmZJMSZqRnqiWby1Oo2Ek
      Qn6iFrsnyMObVxO19/Lo3atp6exncXEWQyMuTEYTc1P0uCICS3OTMRkT8HpDFKQnYtaIhAUV
      ywtSGQlE+bev383Z1m5Sk5PQEiEgKVhRWsy2UguHWuyjdo5bBZoMO4+coTLVwG+OtPLPX9uE
      zSdxrqULALPJxD0VxTxcYWU4FA9/3+I8/vLFvTgkuH/VQh5bV8aLe0/y5MoCfvZehAfXzUcS
      BJoGgsw1Cdj6BmhxBqdq3hXpsfXxyslW2qoO8dBd67APDHLXFuvo+bVlRTyyOIuffNAyeuzI
      uXp+vKed/+vuMtJMBkDglx82sHXJAlbndY2Gy8+w8FDKYrLP2fnCgkT+l3OY4b6xI71TIewb
      Rqk3s0wd5XCPl+/ct5ou2yDf25RI+fxyXnzv4wshRbYsmsOGbCO/Pj8CWgOr8pLip6JRvrZ+
      EXZ/mBfePRY/JoA/FCY3PWVsXlQGfrBhHiDwF7/bz2QkEAkFONTYw0prCj+4Nx9JEKjv9eB1
      jXDv/KVozMm0DQexdHYBIn++bSUBCZ5/fS/vVbXy1cp8DMTQWyxsXVTKhtwkUq0ZvHOkmgfu
      WMbx2kZK87MIR9R8ucyEzmDipapOdtxRSemZ0wAkpqTzeEU6glKNLSjS0DOESHRcm6enCnRh
      FNRmHwGlgkXzChmx9xOSPo3+TJeLb9xVwZqidNbMyaRuwEPUN8Tp/iCby3MpsKaBEKO5uYto
      goVl2TNQdRIgGg4y4A0homF5XiLd7uCYIjYnPYVvbllIbWs/xVnpSMTYWllIbYsNidiFawUa
      Ono50zPEYJ+NVq+KDfMyps3M/pCEQYpyaYEoAOea2jjY2MtIIIrWnExJgsRQ8JJXNhah2+lH
      KUjUOcOkEuaiC91bx+sJR6Ns+mxeBGE0n6op2BrwuvnJe2dGn6fmgq0A4UgUtUIgEInnJCst
      GY0golaBy9FHxpyF2Pu6uauiiIb2XhTK8S04VNuC3RNiS3keVe0DxCIhnKEYoigyP99KNBxC
      JQooRMVV7R0zECY8/NykMpubbKLT4SI1yUyGTqC6d4T5eVbsjmEKUo30OP0oBYEOhwuAkpwM
      Yn4PYaUOnUKiZ3CE8nwrtW3dGExmsgxK6u1eKrOTONbYM6mvz0RJTjQRcLvwo2RFUQanmrox
      J5qxqCQEjR4xEsTmDhML+3AGYc38XEaGhqntc5Kdlky6BuodfooS9Tj8PkKosKgkvGGJEODz
      BllYmE5Vcze+yPVXgXJSTAx6wyQqY4hKNX3uACsK0jjR3EN6kpHuITfWFAvaWBBjohmf28NQ
      GAJ+PxadEndUSXaCgpL5Zbiba9jb4Ry9B8kpyQT8ATISdGPzgop0DZzqckzK1twUE52D8Wdt
      TUkiy6DkZKeDZcVWatt6+P4DG9l99Cyne13kGJX4UTMnWcuxln5iQEFmKoODg0QUWkpSDAz6
      AvijItkJChqHAlRmmuhy+nH6wmgIk6DX44lAeoKaIacLld6IEPaj1hvRRAO0joQoSTPicHvo
      GvaN2rl+fj4Hn3sSuE4ByNw6lGenUtNtv3bAG0iWxUjP0PVXC6+XSwUwpg3w/c0Lb4Y91004
      EkGlvDU9u2fS9rtKs6Y1vlv1vuelJo7+HlMC+Hy+K17weWd4eJikpKSbbcaUkG2/Oej18a5R
      2RVCZlYjC0BmViMLQGZWIwtAZlYzxhUiHL685/13v/sdw8PD9Pb2kp2dze9//3v6+vpoaWmh
      qKgIr9fLs88+y6pVqzAYDADs3r2bzs5OPvzwQ4qLi/n444/p7OzkwIEDVFRU8OKLL2Kz2bDb
      7eTk5ADQ0tLC2bNnOXr0KImJiRw7doyWlhaOHj1KRUUFL7/88ph0LyUQCKDTXd23JBqN8uqr
      r+JwOFCpVJhM8YG2mpoafvSjH1FQUEBqaioHDhygra0Nh8NBUlISe/bsobu7m3PnzjFv3jwA
      bDYbe/fupa+vj4yMDF599dUx9+jf/u3fCAQCuN1u0tLSrmrXRGy/EpIk8ctf/pK33nqLjRs3
      jh6vq6vj3LlzVFVVoVQqqa+vp6WlhX379pGVlcXOnTtpbm6mqKiI119/nfLy8kmnPVXbP/sM
      2tvb2bt3L06nE4vFgkajAeDNN98cc88vzefBgwepq6vD6/Vis9lwOBzXvMdXQqWKD7JdswQY
      HBxEFEXKyspwu93odDq2bNlCb28vADt37mTz5s1jrhkZGWHp0qUYjUYCgQB33XUX69evZ2Rk
      hIaGBsrKyrj33ntpbGwcvaaoqIiNGzeSl5eHw+Ggt7eXLVu2oNPp6OrquizdyXLkyBFyc3PR
      6/VkZmaOHs/Ly+Phhx8G4i9Va2srOp2OwsJCdDod27ZtY+XKlWPS3bdvH6WlpVitVnQ63Zh7
      JAgCDocDtVo9KpgbxWOPPUZ2dvaYY6WlpWzatAmr1YrD4WDNmjVs3LiRSCRCfX09y5cvJxwO
      j36cXC7XDbXxUj77DBoaGkhJSaGgoACjMe5MGIvFcLvdbN68GZfLRSwWG5NPu93OPffcQ2Nj
      Ix0dHYRCIa5nUuM1BfD973+fdevW8e677zI4ODiqHEmS+NOf/kQ0GqWpqYlz586NXhONxn0v
      9Ho9brebmpoafvGLX/Dss88SCATQarWjcVxEkiQ+/vhjent7MRqNo+dUKhUej2dMulPB6XRS
      VFTEsmXLeOmll0aPX7zxF+MWRZFVq1axZ88e/H4/u3btYu/evXzrW98aDRcMBiktLSUjI4M3
      33xzzD1yuVz89V//NStXruTXv/71lGydCIIgkJBw+cT6UCjEP//zP5OWlsaqVavo7u7mpz/9
      KY8//jh33HEH3d3dqNVqhoeHSUxMZM+ePTfMxs/y2WewY8cOtm7dSigUYt++fUBcAJfmUZKk
      MfncsGED77//PgqFgmAwSHl5OW+//faUbbqmAA4fPkwoFMLlcmG1Wunv78fpdKLRaLj//vt5
      7LHHKC0tpaKiAqfTycjICMFgEFEUkSSJaDTKnj17+Na3voVarWb+/PmcPn2avr4+LBYLwWCQ
      /v5+6uvrWbZsGWVlZbS2tqJWq3E6nfT391NSUjIm3amwcuVK3n//fZxOJwkJCaO2jrkZokg0
      GsXtdhMKhXA6nTgcDu6//34EQRi1dd68eZw4cYLu7m6sVuuYewRw/PhxvF4vgjBz09Tdbjd2
      u53/+q//4itf+QrFxcUAvP7663zve9/DaDQiCAJr1qwhGAyycOFChoaGxrxwN5rPPoMzZ87g
      crlob28nIyODtrY2FAoFkUgEj8dDNBpF+ZmBttTUVKxWK3PmzEEURex2+5iP2GS55kCY3++n
      qqqKsrIyEhMT8Xg81NbWsmzZMkQxrh+73Y7ZbOa1117jvvvuw2QycfLkSbKzs7FarRw9epRw
      OIwoiqxevZrh4WE6OjpYtGgRu3fvZt68eWRnZ1NVVYXFYqGkpIRYLMaJEycoKysjISHhiule
      ZKIDMoODg7S3t7NkyRJefvll7rvvPgYGBujv7wfi1QeLxcLJkycpKSlBqVRSVVUFQGJiIl1d
      XcybN4+ioiJaWlqIRqPMnTv3snvU399Pa2sry5Ytu+wBfpapDiYFAgGOHz8OxEvakpISAoEA
      LpeLnp4eAEpKSujp6cHj8QCwfPlyIpEIkiRhNBqpq6sjOzt7yi/QVGy/9BlIkkRVVRVpaWnk
      5ubS1tZGfn4+4XCYU6dOsWTJEmKx2Jh8Ll26dLTtFQ6HqampYeHChZP+2FwcCJvWkeChoSEs
      FsukrpmO0cSpxHGzbJ2JOGeKW9n2GzISPNkXCrhpN/BWslXmxiGPA8jMamQByMxqxrTQQqHQ
      zbLjutBoNLLtN4Fb2fYrNoJlZGYbchVIZlYjC0BmViMLQGZWIwtAZlYjC0BmViMLYAL43cPY
      h2/+ch4Tob25mci1g8lcYFYJoO3UPp79wV/yv3/2T7z6zoFrhn/ppd8A0NdYxYdVjdcIPb34
      hm383Y9/zPPPP091c/dVw3ZUH+HDqob47+aWSQvgN5e4h882br1FXa6TlRu38sR9a/jJc3+F
      a+t63n/lV/QO+9n8hS8jDLdw8Ng5IsoEtq0rZ8+evQQiajZWpnHm2Id0n97H+i8+TqCzitNN
      veTNXcB9d64GIvz+hf9k0O1j7dYd5Oh8/Nef9pBdvIBM5RD2kBpnSEue3kNNq42ckkWsX2Dl
      xVfeQqU08dWnv8RLv3wRQali28NPkm3RsfsPL3PfE89SkWMG4Mi+dzjd0EVmYTn3Lc/jp79+
      B4s2TNHSLbR++Da1Qxq0iscYdI4gAj//2U9IsKQRVln46gMb+dWvXiIYU/L415/i3ddeQFQn
      YHOGuX9DJXv37CEo6LhvVQlvvPsRuqQMvvGVh27qc5opZlUJcCmpRhXdjec43u5h1fIK/vD6
      H7GkpqNVK6n+eD/avMrRbUqVwMIVd/DIvWs4cbaepqZGtAYzC+aXxCOTBDKtmWgUUd7b+xEv
      v/IHnvzms3zp3o0M9ffQOQyPbV/OJ2e6+fa3v03j0QP02XuxD/tZsGwxSt8Ird128ucsID0x
      Pllo0OEjPe3i+qgBDhxt5Nvf/jbdZz5hxO9Fn1bAM089QtWxKtasWcvazdtZUTmXnq4uYoA7
      LPLEV7+Oo7OREwfeIWrMpsSq4+19x+gddPPo40+g8Dqwzl9CSck8nnliB/3drbhDIksXL7oZ
      j+SmMCsFMGLvpsWpJDdZj29kiJioY92apbz4699w34NfZk5OGpIERCMEIxdXFv7U33zTtof5
      wubV/PzffwHAUGsVJ3siPLB9MwophlGrpG9wZHSCzJ2bN6NQaAgHXARDATzhKMkZRXz/u9/k
      7Pu/p35YzX//P79PxHaWvUfrAFizZiF/+tP7RCJBhoa9RMMeAqEgrkCY0S2BBQEBUKtU+Lze
      sZNbLvjHC4KAQW/AMTSEObOYiqLMi6dGfeilaIRQJErOvOU8+/Sj/OnXzzMySxoSYybFzwbO
      njpGa88gX/v61zBbMsgyC1SdradoXhlLygrYu+8TSuaXU1hcRGGGibf2HKKysgy9MYnUJCNq
      gxnJ3ceeA0e4e/v9ZKQkojWn0t98BmdMR2FeHvfeu5mD773DgEeiOD+b5IxsDBo1xTnJvPnW
      u9z74JdJ1MDuXTtJzFvImoUF7N+zG7eQyNZNa1ErRNLzShBd7bz7wSdkF85j2YJC/vjmTu76
      4g6sFhOiWk92RjKIaiqWLKb59GH8ohFrmoXsnBxEIPfCggNL195JyNFBc+cACyoXYk7QkZMT
      35o1OyeHLIuOnQdPUpKbys5duylZvp4FhdlXuYu3D7IvkMysZlZWgWRkLiILQGZWc8MFINew
      ZD7P3HABzOSyGzIyk0WuAsnMamZ8JPg/d1bRZhu5dsBJ8LffuHNa45OZPcy4ANpsI9S0Dcx0
      sjIyV0SuAsnMamQByMxqZAHIzGpkAcjMamQByMxqxu0Furg89Wc5sf9tTKV3MtBwjLScImIe
      By6PF5MlhSGXjwRTEr6RXiJRBevWrr6hxsvIXC9XFQBwmQiys7JwAcXFxdTWtaBJ0LF8Xg5v
      vn+GzQ88QGPVEfpaapmz+kFisRixWOyynWCmm0hkljivy0wboigiiuLVxwFOnTpFb28v27dv
      v3AkSr/DTSjUj9YQw5SURGZyAuda7GzatIqWcyfIyCnGZDIRdnUjiKmIkoRCoRiN80bsmnKt
      TShkZMbjhs8HiEajYwTww1/un/aBsLd+/MgVj7f2DvPCrtPTmtadiwvYtKTgiueqWwemPW93
      Li4gPckwrXHKfMq4n86Ib4hT5+oZ8ots3bhyJm2aNryB8LS/kOWF42/JWdM2wCv7aqY3vYI0
      WQA3kHF7gTz2Tv7l+VdpbqqdSXtkZGaUcUsAQ2oed6+vREyY/CbEMjK3CuMIIMbpw/txBNRs
      WFI8sxbJTIj+YS/7q9qmNc7ygjQWXKWKdzsybgmg0CVRNjcVx+DgTNojM0EGhr3T3t54ZFP5
      rBPAOG0Akf72Wj748BB1TdP7lZGR+TwxbiN44z1fwKQR0RvkHgiZ25dxBRD0jKDQGumz9cyk
      PTIyM8q4bYDE3DJWlfeRkJk7k/bIyMwo4wpgpP0ce/YfQZnawtIFpaPHO5tr0afPITjcgycE
      mUl6WnsdzC8poOF8A9bCEnzOQaLRKPn5+TORBxmZKTOuALzoUAk+Nt+5aczxsHsIhyHEUE8f
      OgFO2WFFYSq7du1n9d1303j2FPbuBvIWrL/pznCxWPSKx6+HWCx2lfSmfwmYWCx6xfRmOm+3
      G9dwhovw6mvv8Myz3+G1N3ayblHJ6Bm9Xo+L+IsclkAjCjg9ASwWIx7nCIJSgyUlHY9rGFHM
      Q7qJznCiqLji8etBFMWrpDf90ytEUXHF9GY6b7cr4+a2rLSY48dPUlaxcMzxzJIlZAJkjvX1
      zyyK/1uUmTLdNsrI3DDGEYCCO7decIG+AV9sGZnPC+MIIMrbr71Ma1cvmpQCvvtnj86sVTIy
      M8Q4lVYld65eQHOfl4B7aGYtkpGZQcZtAxjTC/jqQ/cw4ArPpD0yMjPKuN0WH7/7Rz44co6a
      6uqZtEdGZkYZtwSoWLUJt7qWyiW35mwwGZmJMG4JoAg7ae1z8/qrr8ykPTIyM8q4vUCeWAIp
      Sg/py1bNrEUyMjPIOCVAmJ/+5B+wj3jo6uqaWYtkZGaQcUoAke0PP8HGO9eNe2FbcwMhQUNm
      ok52hpO5ZRlHAOqrvvwAjsFBtIlp1DbaqJSd4UbPTX96sjPcjWBCK8NdjbnzF1B/7hwxpUJ2
      hrvk3PSnJzvD3UimnNtoyE9uyXxSE/V09TlYv76MrvZ2liyuxOdxxb/802mpjMwNYMoCSEpJ
      H/2dn5MFQE5+fMlAs9l8nWbJyMwM8v4AMrMaWQAysxpZADKzmtnV5JeZMrfr0u+yAGQmxO26
      9LtcBZKZ1cgCkJnVyAKQmdXIApCZ1cgCkJnVzMgukTNJLBa7IU5pn4f05LxNH5IkoVQqb7wA
      JEm6IR6gszE9OW/Tn94Nl9y1MtVYc4bzDQ14AtOz/IogCJw/fYSufhe1tZfvcNnV1UVrbS3+
      S47te3cX/msUVO3t7eOmNxGGe1o5fPr86P8He9txhyZ06Zi0GutqqDvfyJW89q+Ut4/27sYd
      vvo37nryduKjvfS7w9TVnGXI6blqfFfjamkNdLdTXV1NS2fvNeOZaNoX07vhJcC1OHX4I7TJ
      6ZgFP15jLkPt1dg6h0nLSiVBI+D1BSAhDXXUQ0tLO+l5xWxcvfSqcVadOoVSpcLr9SJFgoRQ
      I4Y9JKVaaW5uIsuSjMqkRJU0l7mWMFXVLWhSChlsOw1KDYKowiAGae11kZWTQnJyJh7nEFIk
      SP7cMlqqTxLWpnDn2mUTzueJ48eJRKPkWPTU20PkmSIokudw7vBeSldtpSQ7aULx1FefJoAW
      nRgiEAzg9/pJKq6gv74Gx4hjTN5K0wVOnK5DacpmpOc8kqgGUYlZE6W5Y5D0nExSLal43SMI
      0RA5xfPpqK/CK5jYvH4Cc8Gjfo6dOI2kTGCwp4WsFCODQhp6wYteKWBOy8Fr76Cpz8uXtm2e
      8L36LEeOHGHVqlUcOXKYaChIfn42nxw5TVbBXBT+fryCCTE4QlShw6jXUJidyvv7j3L/418h
      4RpDvZ+bRrBSrcHW2U5UgszcIlLM+tH5BOFIGKVCgSXNSknxlXdp/yzpZi2DnnipIkkSKp2R
      BQvKSTIZAJG8XCvBYJjGpi5MKak4BzpIMFuwWJKwmBNQqLQsXbIIpVLDgvmfro4thN14YgbU
      4mRmf0l43SMowx6GxCRCgx24AjFsXe3kFRbi8QYmHJPBmIh7oAtX6EK+NFpsne2IGsNleWtq
      aMVgScU91IPBlIQl2UJykhFRqWHx0sWolCoqyi/s/SAICJIPV0CFVjmxUq27qQHBYMHtHiE5
      LYMkk4HyiorRl0oQBOzDLswJ2kncq8tJNeuprq5Ga0xCEAQEJJLTs5iTnzJqr96YiFGvAaCj
      y0aeNZXgBB7RTS8BroWjq5GwuYAMk+pmmyJzG/K5F4CMzI3kc1MFkpG5GcgCkJnVyAKQmdXI
      ApCZ1UxZAEGfi6a2z9eyif19/dd1vd89jNM7ydEpwNFnI/SZLrf+/r6JXSzFqK89f8WBrenE
      ZrNNSzxSLELt+fobFn6mmZAAzh/axb5TbWOOvfbK7wnHrtyB9M6uXfHrTh1i+Gpd3IE+vvPs
      D/jpT35Mdbt9YhZ/hl27d43+/uD9D6YUx0X6Gquo6Zj8jjhH39/FUAggxO5de+O2fPD+ZeEi
      HjvHzjaOOdZadYAjdX1j1lA6svdifNPHrt27OHvsMJ5LlHbxOTWePYbdMzEJVh14k7o+34TT
      nWz4iWBrqKKq4VJBBzh86NSU4prUlMh/+ru/waBRkV2xlmNV1STmlrD/zd/jDkZ59InHeeX3
      r1G+bCn73nmHEV8MS6CfhNxi/uNnv0ZC4MFt6/nt20cIudw89/f/Ay2QkZ1PoVVJX1cLu175
      FVFBy7a1xew+2c2mlQvYf/AQi1auZ7D5OAMONxu+9Chvv/A8KrXA2q0P8s7b75CQnM36FZUM
      93fy/L/+E9Z5q+huqefOSisOcwXLsqK8sreeWPdhln7pGc4ePYF/oBGHO8j2h77MW2+8QVTQ
      smNTOY6eRn57vgoGzzMQUPPo176BNUnHW6++SHV9B9/4s6/wj8+/iibk4pvffZbf/Oq3eOwD
      LNkBnY01vP3OWyRn59Nef45/+NFfsvnLT7PvzVcJRgW++8zDnG3q4uzBN8FSyDNP7ODQoUN0
      +DP5+QttfPfpp3nhhf/A0XyOIx0uypLczL3rGfa/9gL5FiX1I1HK8jM5WdOMyZLJM199iH1/
      eJFmj8iIK0h5koruaIQ51izO1DeTlJZHrt5LXY8bbzhK09k60ufm8a/PvzzmOVkFG1jy+dW/
      xp/T4w9t5d9//x6C182jj97Nb1/fx73b72fDykoOHTqEPxN2OarpsHtIyy9jqOnYaH6aqo+z
      /5PjJGWX8fD2jaPhdw5W02YbpHTZBjobG0nXOkmYs5mehuM89tijvPvGb2mz+9mwdjlv794P
      KFi3KAtt8V2c2f8aC/MtfNTkwe1ysiRT4OMWP7ovruV3O4+w/QtbqKs7z1BPTTyNFVs5sesF
      ErIX8q1vPsHVRpAmVQVKyy3mycfuZzioYNWqlWy/owKHV8HqZZW019Uyd/kWNq9dQ/niRTz8
      pW0AeO3d5FZuYF15Fl12LyvW383SwiwuLRjmr7mPxZkKFOYsKouseEKwadsOUlV+FtyxnQ0r
      K+ntd7Bm7Wp8bifF85dw/5Y1KExZVC6s5I7lFQCYU7N5/LEd9Pf0kZek4M3jXctlSAgAABad
      SURBVKwotaIy5aAIdGItXc7hP/ya4kVL6Xd4Wbt6GT2N5z5NNwx73tlJ2cJFLFu9AX3MQ4fN
      AaER7B4FKYYYDneYihXr2bi0kJaGJhZufIDlC+YAkDu3nIWVi1heMYf8eRXsuG8j/R0teBVm
      llUWMXJhZFqXmMkzT+wAYMmSJWx/eAfaaAS/30MwAgsWVPKlhx9CKUA46MfnDwIC9z/2dUKO
      PuYsWEja6Fxake07HkOvCAEiO554Gk9/N6WVi0k2amnrHeLpp76GURNfSnHE1nHF5+QZvOQ5
      DXpYsmYTa8rz0KQUsmZJKdUX/KqWLFnCwzt20Dvo46mnvkZ/d+uY/DQ0tTJ//nwG+rrHhG/v
      srFs1RoUkShatYQ6uZDhuncxZ5cD0GP38NRTXyc42MGKux+iOEVgJCgQDgfx+uLeTXff/whZ
      yToWlC/gji1fJDNRw4oN97Cyci7Ap2mEPNy5+R5GeuoZudQx6goonnvuuecm8vLrzckkGbVk
      pKcjqvWkJ5tJtxZgUHip7xpi/d33MtR0nJZ+L+sWzWH3weMsKJ1LdulinM0ncIipbFxWilJr
      JNmsJ9WaiRJISEyjvLQQfVIGXlsTQ0ElCxfMw5yUQm5BIa2nDtI1EmZlxRyOn61n0eIlmBMM
      pKenojcnY5TctNoD5GWl4x+2cfBEHQ88+EXyU9S0DCtZVh7fwDjmd5FVupJYOMLK5YtINig4
      W9/F2s33IYy0j6a78s6tjHQ3EQt7cASUrF+zAo1GTVdTLcaMfOaVzEOvj+c/v3wZLSc+IKpL
      pqysFLWowOPowB5QkpVmIT09HUNaISniMF1DQRZXlqPW6rCmWUjPSB9zb/OTNez9+BSlpaUs
      XlTB7p3vc8fG9ezfu5fCklIK83NITsugqKiAs8cOY0zLpTg/m7bzp/noxBnWrt9CRoqFlMwM
      igrzOXX4E5KshaxbMo+33jvAvNL55GVbKahYQv/5I2Of0/y5ZM5djLv10+ekUOtJTTKiT9BR
      W32elWs3kJGSGP/QJGcwJzuRN956j3u/8CXMCbrR/IgRP/WdDirKS8jKzBgNPzcnmUNHTzFv
      wSLykrUkpBehkiIsWr4SnUogJ9PCG2++zeL199J6ch8JuZWsX1rOhx/sJbuwhDmF+RiTUtGr
      ReaUVXDyo/dIy59PUpKFZHPcBWT54rLRNOxdjejT57K0vBjxKp4dt+1I8LvvvMm6LV8gQTP9
      i8h+nmg9f5a0uZXXdPqSuTK3rQBkZCaCPA4gM6uZFgHciI0hZGRmgmkRgFyLkrlVkatAMrMa
      WQAysxpZADK3H9EQTHATQVkAMrcfgZEJB5UFIHN7IcUg6Jpw8EkLYMDWjcsbYNjeh2sSqxnI
      yMwIIQ9IE1+NcFIC8A720GobIiYF6Xd46e1qn6x5MjI3loBzUsEn5UES8LjJLppLX3cDKmUK
      wBV3g5eRuSlEQwhBNwBSNArjzFeBKe4Un5w3h8b6BpLTC/A7B1DoEhFF8bLd4GVkbgrBIbj4
      HioUIF77nZwWZ7hoNCoLQObmIsVguAWkGMFIBFVqCaJ47e+73Askc3sQdIMUIxKLMeyf+BRM
      2Ytc5nNBe3s7CoWCzMxMlEolsVgMp9OJIAgkJiaOCdvT04PBYECpVGKz2bBYLCQr3EiSxIjP
      N9oe9Xq9hMPhy66/FFkAMp8L2tvb0Wg0OBwO7HY7+fn5DAwMcOLECe655x7a29vJzc2lp6cH
      vV5PVlYWH3zwAQ899BDtTXUcbjoLShFRqaSrx8b6TQbqGxrJysrC4XCQn59PTU0NkiSRmZnJ
      unXrALkKJPM5IRAI4PP5CIVC3HHHHQwODiKKIuXl5dTV1RGLxWhpaWH58uWja/uXlJQwMDDA
      yEAXxkQjSo2aYChEQoKB/oF+Kisr6erqYvHixfT09FBUVERaWhoajWY0XbkRLPO5oKuri0Ag
      QEZGBgaDAbc73p3Z09NDbm4u1dXVLFmyhHPnzjF37lzUajWiKOJ2DhMZbsMVjM9+P1dTz8mq
      an74139PY2MzpaWl1NTUUFlZSTAYJBqNIooiJpMJkAUgc4sT8dgZHGy/bBwqPW+x3Askc3sR
      i8Xo7OzE7/dz6tQpYrEoDY3nOHTkJH19duobWvB6J7cI16QEEPMN8MmxcwyOODlz8gTV5xuv
      fZGMzDRx9OhRamtr2b17N6FQCPuQDUuSkaLCPNo6ukCAoyfOTCrOSfUCScoEUhPVDNq7MCXl
      Al7ZFUJmRgiFQjQ2NuJ0OsnOzsYTDjHQ3YzFqKW5pZ3lSxdy9HgVbpeHWCxGNBIldpXP+5Rc
      ISLhCJIkodOnEhjpR6GXXSFkZgalUsmTTz5Je3s7Iz4vdfXVZCUkE42qycvNQqEQUSgUrFi+
      EFEUUSgVE2oDyI1gmVsKTzBIn9uJxj+AMjJ+fV9uBMvcdgTCYfrdToRYGMVVXn5nKMqg1zuh
      OGUByNwShKNRbK4RJEAVcnGl5T4jMYnTQz6OOjyoJlgjkV0hZD73RGMxepzDRCUJpBjKsOey
      MF3eELVOP8VGDYssZszaie1NPK4APnz/HVwBAY3RwpYNq6duvYzMdRCNxeh1jhC5sPpg/Ov/
      abPVG4ly3OFDKwpsTDeiUUyuUjOuAJZXzOG03UDY0TZeEBmZG0pMkuh3uwhGL+xeI0mowvEJ
      71FJ4rwzQI8vxNJkAymaqVVmxpWLLn0eGk8H1ryiKUUsI3M9SBdefl/4072ilGEPghSjPxBm
      T68LpQB3Z5qm/PLDVUoAv72Jo439rFRqIT9rygnIyEwWSZIY8LjxhoKXHiTiH+aEw0NMktiY
      bkSnvP4+nHEFoDJYyDKpcXiCY473tNUS1eXgd7Sj0CdSXJB73UbI3BwOHjzIqlWrOHnyJCaT
      iczMTIaHhzly5AhbtmzBZrMxf/58Wltb6ejo4J577uHo0aM4nU6Ki4sxm8309PQwf/58Tp48
      SWVlJXV1dXi9XtLT00lNTcXlcuH3+4lEIixYsOCaNkmShN3jxh0MjDnWNthPl2OYRRY9mbqr
      7fo1OcYVwOlD7+OKmlGGPi2Cgp4RooKCQGAElTYdYrIrxK1MNBolEokQDAYZHBxkZGSEcDhM
      VlYWTqeThoYGuru7SU9Px2g0EolEOHDgAI888gitra1Eo1H0ej0ff/wxhYWFvPPOO6xbt476
      +npsNhvt7e2IoojH4yElJYVI5No7UQ56PTgDn27sNez3Ud3XS646yuaMBBSCMKHl+K/bFaJ8
      0TJSpCwkd8/osUgsht/rYSgkoIv2o9CbZVeIWxiz2czBgwdZunQpHo+HcDhMIBDA5XIhCAIG
      g4Hy8nKqq6tJTk5GqVTywAMPjE5D1Ol0iKJIKBTizJkzpKWlUVNTQ3JyMjabjZSUFBITEwkE
      Ami1WpTK8evqkiRh97rxhEMoFApC0Qg1tl4CkTCrrWlYopNb7+e6XSGi/mF27TuKwZjIpvWr
      rhqJ7Aoxu+nt7aW2tpb169ejVqsnff3Fl98VCCBJEp0jQzTZByjLsJJpNKH12VDEJrFxcixG
      ev5SRMW1BTBuCEGhQhKVzC3MnnjCMrMSq9WK1Wqd0rUXG7zuYABXwM/Z3m6SdHo2FpegEEUU
      Yd/kXv5IGPx+YGJV8nEFEPIM0t7ZSTgUJCcnZ+IGyNxW1NTU0NLSwtKlS6mqqmL79u34/X72
      799PWloaLpeLWCzG5s2bJx13vJ/fiTMQoLavF3cgQKU1G5NWFw8gSahCE1zpWZIgFIRg8Nph
      L2FcAdScO8sXv/QImYmTL9Jkbh/S0tI4fvw4GRkZGI1GIL7cSCgUorm5GZVKhd1un7QAorEY
      NpeTFoedhoE+ilPSqLSOrW0oIj5UUhilQoEoiChEAVEQEAQBAQFBAAEBYjHweJCiEpJShcSF
      4xNgXAHoDSaa6qtxmE0sqZw/qczJ3D709PSg1WppamrizJkzFBcXo9VqSUxMRKVSodfrx6yy
      MBFCkQgtDjvHOtpI0GhYW1iMRqFEo1ShVanQKJVoFEpUbg+C2nSNyELgdsdLgCm0Q8dtBAcG
      W3njYC1pqSlslhvBMtOE0+/n47Ym+lxOluXmk2VOQq9So1OpRpc7ASDoBE/f+BFJEni9F+r7
      V2DOSrieRrCo1iFEJlefkpG5Fkc7W0kxJLBpTik61TgDWlIMfI7xI4lE4l/9CYwrXItxBXDs
      xBmSzAZEUZ4yIHN9NAz083bNOfKSLOxYuHjsl/5KBEYgFr78uCSBzxf/mybGrQJFAh4iygRi
      QS96gyGefixCW2s7ar2BoNuJqDdRkGOVq0AyV8TmcvKHM6dJ1OnYOKeE7Kus0TlKNATOzrG7
      vEgSBALx6k70Kru/SBIEBiA0DCWbITHvmsmN7wrx8U7qXGYsRi3btmwEQBCVSFE//mAMhTIJ
      KSS7QshcmUb7AC8cO8L/sW492eb4iz8RVwjB0weRS/r9w2EEr/fa1Z2wC8HTAiojUkIRMX3G
      Va+5pivEotWbse0/gkbz6cyaoNdFGDUahYGQT14VQuZyYpLEvsZ69jU28MMt92DRGyZ+cdgL
      UX+8NycajTdyL/brj1cVj4bA0wLRIJjngdKAAIgKxfU1gsO+IcwZRRRmJY0e0xhMzCu52C0l
      u0jLfEpMkjjT3cWfqs9SkJzCj7ZuQ30V35/LkCTw2uN9+j7f+L07o+Fj4O2EoB0MBaBNmZLd
      47tDG9NprfkjKqmCHGvGlCKXuf0JhMO8XXOOk50dlGda+e4dG0lJSJh8RD4HOB3xuv61qtMB
      O3jaQJcBliUgTL2jZvwSYKQHyZhJ0DvxTYdlZheeYJD/ufddNs0t4e+2349iKj2GoSC4nTDY
      HP+qX42ID1wNoNBA0kJQXL+XwrgC0KXPoSJ7GH3y1JycZG5/Xj9TxYOVi1iWe+3ellEkCcIX
      HNb8vvjvgP3KL78kxXd6jIbB3wbuYdAUgKQHhw+iHojE4u2FmASRaLwKFYmBqQCs166mjz8l
      cqCZqLmAQVsTzMmfeAZlZgVDPh9N9gG+vuJyLwEpFCLm8xF1u5F8fmJeDzGPF0VaGlpiMNAf
      76GJRuICCHnjL++YSCQQBGAQLH4QsiBSCJICFBFQiKBSgk6MN5oVwoWdIUVQipCePqF8jCsA
      pd6CveosFZULJ3VjZG5/Btxu/unAB3xj1VrCPb34jh0j2NSM5PcjSTFErRZRb0BMMCAaLvwl
      JCBqNaBWXfiyx0CIQXgIRFP8pb10gCw0Aq5G0KRAwkIQbkwv47gCkFDgGOiloSmBXGvqDUlc
      5tZjwO3mb/e+y3eWrSDpD2/gDIUxrL+DhC2bUUy08WvNiotguB18sXhXZ/jCyG80EH/xESCp
      Ml7fv4FcZY5aiIjKSE6a+YYaIHPr4A4E+PH77/EX6zei/Pnz6LdtQ7doijUEvwOkEOh08b9I
      CHqrwT8ACcWgnsCo8TQwvjOcUo0y6qO1e4B5pXF36EjAS3N7F1qDmaDLLq8KMcv4Xx8d4OlV
      a9C9vQvt5s1Tf/mDrrgAIF4SOLtgsB4shZCzON4+8Pnirs43mPGd4Y6dJK9oHhtWL/00sNZA
      YoKOqCpETF4VYlZR22fDoFJTZHfgdbtQL10yIdeGzyKEfeDpAUlCCAwjDlQTU5uQ8taDqIy3
      DUQREhIgFkPw+eJVpEm+X7Fo9KqzIq/pCmF3DBKIODhrNlJZVgKA195FfecApXOLsA+3yKtC
      zBJiksTvq07yFxs24fqnn5L65z9AMZlR3ksJeCEWgv5qiPghczGidpxqtkIBZnO8m9Pniw+S
      TZCJukKM6w3a29VBOAaiSnPNkWDZG/T25q3qc4SjEbZ09SKo1Rjv3jL1yDo+hv6zkFYGxkmO
      MUUicf+giVSNJjghZtyhO2tOHnl5ebIbxCynyT7AsY42tqVl4D9zhoS7Nl1fhFozFNw5+Zcf
      QKmMlwhm85SmP14JebaLzLic7u7il4c/4c+XrcT5H/+J5etPIlzHiydJMUjIBHXChe7NiU1c
      vwy1GpKSwGAYO3YwBeQ9wmQuo2XQziunTqCwD/JVlRbxXDVJX38STfHkVwqPdBwmVPVbCPtQ
      ztmMetFXPj0pSfF2QNAV/5vgWj5j+Kzb9EUmWAWSBSADQMTlomrQzq7688ROVbHd46eosBDt
      gnL0y5cjTKHRGzz6c2LObjTr/juiPvnqgaNhCAzFp0NOhWAQPJ54LxLIApC5MlGnk1BrG+Gu
      LsI2G/3Dw3wSDXMuxcKiikru1ieQkZGBcoK+NOMRaTlAuPkDdHf/7eix9vZ28vPzR/+98oUB
      bK01JBu1dNv6KMybxKJsF9YHIhiUBSATJ+py4z91iuD580QcDkSjEXV+Pm1aNX+09aLKzGBz
      aRlLcnInvLHctZCkGP4/PIVu+78gaD9d12fv3r2o1WocDgdJSUlIkoRarWZoaIh58+bR3NxM
      eXk5/f39tJw/zb3rl/Dx0VNkZ6bT0d1LotmEUqmg1zbAji/eM74BoRCklV7fjDCZW5eoy43/
      xHF8J06CIKJbWIH5oQfxmkwcbmvlQFMDeQkGnvnSQxObqD7Z9HvPIKbOG/PyA6jVajZs2MDB
      gwcJh8MIgoBGoyEnJwebzUZpaSkejwelUknBvErqbT6KC/Lo7u0jMz0NAL/fj8Ggu2r6Zxpa
      WJg+djG3+vp6UlNTSU4eWxWbXAkgxahraKJ0Xgmdbc0odIlkZaTIJcBNRopECLW1EThfR7Cu
      DkGhQL9iBdrFi/AplRxqa+VoeyuhaJQ7iuZwR1Ex+ims4jxR/O/932hWfBMxKX/M8ZGRERIT
      ExkZGcHtdgPxJdoFQcBut/O73/2Op59+GpPJREJCAkNDQ3R3dVGcpiIaig+CHTt1lrM19fzg
      O0+Pm/7BQ8eJGTIYdAyTl5eHy+VCr9cTDodpamrCaDTyyCOPAJMUQCwc5HxLG+Xz8mhpHgIC
      FBQWEI1Gr73Wi8z4SBKS10tseISY00nM5SLm9xHz+pBCofhfOIwUiSCFwxCJEAuGkAIBYpEI
      qFQorVa05fPRlpURUaup6unmo5YmRnw+VuYXsKagcHIT1KdKLEzgjT9Du+M30xenFEVw98Z7
      jCbAh4dPoE8vJjUtg9bWVkRRRK1W4/P56O7uxmg08tBDD13dFeJKiCoNaoUIKAhHAkBYdoWY
      ILFAgKhjiIjdTtQxSNjWR6R/gJg3vuetaDSitFgQExNRmEwozImorFYEtQZBrUJQqUCpRFCp
      EJRKBI0G8ZK9cN2BAGd7uzl0/Ah9LhdrC4t4euUa0i4saDtTRFo+RpW36qqbYVyK3W4nKSmJ
      1tZWRkZGWL58OcFgkNOnT7N8+XIOHTpEXl4euTl54OqekAjuXLcSkopBVFBUdPWu20kJIBzw
      IMUkevtdpCcbUOhnxmX1VkKKxQh3dRM8f55QZycR+yCEQwh6A4qkJJSpKShTU9GvXIkyNQWF
      eeru5k6/n31NDRxrb0OnUlGRlc0TS5djNd+85xJpPYBq4eMTCitJEnv27GH79u0cP36ctWvX
      AvDRRx9RVFTEgQMH6OrqYsmSCxPfTdng6onPDZ4m5F6gaSJit+Pes5fg+fOoCwvRzC9FXViI
      MjX1ukZPP4s7EKC2z8YnrS3YPW62lpaxIj8fnerzsYy977WvoX944tWfqqoqioqKMBqN7N69
      m23btnH8+HE8Hg9paWmUlpayd+9etm7dGr9Ail2zJHB7vBxvGqKouJj8/HzOnDkDgF6vp6Oj
      gw0bNqC6sC7p/w/F1DZMVZNWjgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='96' name='Sheet 1' width='192'>
      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
      ck5ALY9rAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9V7BkyXnn98vM48pXXX/b25lpNw7jMLAEMQQIJ63oNlbQMlZicLVWit2Q
      NkKhB7xKD7vBkLCK3SUligQJbYAAgSEFEMAAIAaz42e6Z6b9tLmmb19ft/yp4zL1cK437R2D
      +kd0V91T6c4535f5ufxS/Mdzs2Ymltxv6KBD7ewPKD/0K8hMYeUHYwjOvUY9+QAjNSqw6Xno
      N6mNvozUAcX9n0d6OboX3qTlHyexVqpmmg7G6aXjTiAAV9vYdUm7Ei2XERrM4u0XutvIPvFl
      MAZdm8brvkupLwABAnVvHsQtQmuYqR3CRAa17SAIcdf7zGJ4qhiz09O0IoNNgmtZsNh1Mxac
      bisuBOuenWG5zP2GNRNLxsL7+HKNoT36No2JnxGoSQrH6/R85HcQiy+wcfolgtn38O0JtDKI
      BIavjtNqtml036JYbVA89BVk/1Far52gpS5jxRItDAXzMA37HIE7hVuzCcoxViSJZ1luH0AF
      gmzYQ+vY57FDhbz4IuXyCBQgCAEkIBAPylvbBElsGOs8hBw+jIjuzTjLQvODqsPvbuvyetOh
      nRgeymiOFjSn2xYvVm1+pRzS1oL5B2CS3Qz3fVRGa3SrRrF4jP7S58n1PraGOL2BA1i5PnqC
      g+Q6PQgkxG0ypYdQiU1Tnya6/A7CyWDtfBStJHaQw/VLWOXd6GCe7IKDE9iAILE3To4Si8RW
      qNIgRmsK9hVyRYUQClAI5ANN/ABx2yCK28hJc8/6rGlBLRG831Rc6CqaRiNEG2M0V7qSGEFJ
      avJSI7h347oZWNcvsjUEULIktVjfUv2wOgFBi8yux2mPvkLYuELefXZNGadvD3Z5OybokAUm
      3/7XLEz+Nf2P/SOcC2WC/DzatkAIMgeeZ3joECQxwnYRmTz9Y/3E85epLbyJQOA0JWFhZbxW
      KEEbcuVHkV4Ok8TEsoygdhtP5t6j08xARtEx93BOE4IE+EHd4alck6cLTQrSRSOZW5Qyz/qK
      /7Kvwx/OZLka3xa53RXc1oiGXYWfGDJS4Oub53ATdmhf+jHdYIYw26DU3ob76OHl35PaDLLY
      h7Bswplpaqe/S2H4eSwpkbkS5T2/TNKcA+UQTpzC2X4EVehZrt889zOac29T6f0YYj5GRQLb
      KAL08nxeUk/gPfwxrIFdAAhl0er9MtHYjyh6U2QHAAQ6MUj14K4C1myLYuf3qceHoP8hRKkP
      mSvdm84NDFqa480CzxUFcSIYCRUImI4kQgi+3BPyf04ronugm9wMbnq6cATsdBVZKajHmsiY
      mxYOtN8kmDiFO3SQytO/g2XnAeiouTXlgpnzdC78PO13cB/9z/43FA69QPbQCyAE7sFnaXUu
      MD/9PeoXvwtJTPfKKebe+kNMHAKaUE3gTx/HicoUWzl8L8Jrrug8sReh+neuHaDl0N32eebj
      oyxcilmYyDA+9ghxcGsr3d2GMQZnB1i5LE4WRLaA8LL3rH8tBH/dKPJwRpG1FPORZOlJDVia
      d1sOXSOJHkAx8oZXgB5bEmqDnxgMkFOC2SidSW907o/rs9QvfB/pB3TDUQay/xRZHqLn6Fcp
      zp7G6juEzOSXy3vDR5h94+tkdj2D9HKIQu+GNnsf/SokMSgLYbsgbYLmGXRrgezgo3QmXqZt
      Xybj9dIWIWAYCEpUTYDKDpJ/6LNrdA6AZOoCRBFa9VKzniVrzpHzRpEP3goOpAq9228Rz2li
      UQITIZR9T8fwyULI9oxACMHPatayonXCdzjZNZSkfmAsP6ux4ZVmpcCRUIsNOSWQQDsx5KRA
      G0gwNGJNM0nJ/kaJ3+iE+fPfw9enEbag5B5BlocwjXlUrger8tnFgostCoEsVCgf/BK6MY/0
      cmvbMwZdnaJ1+Q2yw4exth0AwC72M/Tkv0C4OeZP/ikJXRI7oeXMpBW1YbK8gPQFbn4bQjob
      H8rOI8jLP6K/dI6kk+D1WIvizwP4Blch25OwI3mH2bkqYWX7Pe37Rw0XIyM+UkyoJqsECwEx
      gnn9YJqRN4hARUtgCYEl0lm+kxg00NaGeJE4G4urwI3CGIM/cpx2dAY7UKhIErUmSapTVE98
      B+TKw+mOfUA4fWH5b3f346i+HWk7SUw0O4ZuLQAQjp6i4f+Cqcv/nrlXfg8Th0gvTzA/wuzr
      /wdB9xxRLkYIiTCpKVOFgkhpgryhdvUNFs78GcZsvJu4cozqiIedV4tc/uAyQNLWBDOa8bEn
      mJvbQ6wz93wMEYKX6xYjviB8MA0+m8Ky1r1TA4TaYIuU+EuWpBprqtGty7/x9GVmx7+FdBOy
      /iAtp0Zu20dJwialw58DlS5EJgyoTfyEYs8xnKGDad25KzQu/IDyE3+PYPQkjZG/xklcZL5A
      7sBnyJwcpF2YJupMMv/mf0C35sgwgNNpgqVQjibxwGtZmEgjLEVsLALPx8oqMj0PbxCBAGR5
      GH/wM0yOHqevcpXs4H23GG8JEwjarYfRO47RqY4hcsX7Yt9uGckPF5xVJoYHF8YY9NwIlivX
      DjbU4EpBM9LcnJCzOboTZ5i+9EcIO8Zp2bjbn0AlLVR2mJmT/4Fi5XEy0VPYww8RzF4m1Ffp
      1F2y5pdTMShXJp6/QufUD/GnzuC6/TS9Mwgs8pmvUHr015FnX0R5OZrJKMLpQiLJ7/8U2XwF
      ISy6rTHsvMDZ+xS6Wyfp+tQuf5fS3i/g7Xpiy7Grvp3kwl+QGVB0F2I0krCWEIhhMm6NTE+E
      7d7/l231gG5O0Dd7gllnGN1qIvvvz1gehKiCzWCMwXTb6Km3Ee4gdniRgnMeS5GKO/EinS/c
      ok1/S1RnyScV1EIX+gZQhSFkt8nCh99BKk0teofGpRMMqf8Wb/sjZCaPEvvjBKMn6XauUDz4
      GezcEGbsHKLgkIRXEVKQODEmClClQfLDn8Q+8Bjh8W8S198j16rgPffUshnQ4dHl4SgGUfV5
      Bob+Jd2L7yDU1pqtsB1afV8hnnyFzpxB9m+D7QfBydBVFtWJ9ynzDqXBYNNV5N5B0LurTTj/
      HjgHIVy4j2N5MKHrc5i3/5T+JyOMBplLXZvqhX/0P35tjdJyh6F6hvC2fQTl9OIOHWPu7J+Q
      7TtGPHsKkSTEWYORGibG8XY/i65N0+mcJrl6kqY+R947gtf/EOHcJUJzlcDtoi2DMoqMtRfp
      5Yjrk6jiAF5umMb0a3SKNax6jN2/P7VGGE04cZbGxZdojb2Cqc9il3cipYUqbrQsrYZwMiTl
      h5HbHkGUtiMcD6GsVK8oDePrYaIro2TL0X1jAqMNOjZYOUGzUUBeY1X72wg9eYpC81uUDmik
      Sgm/O+/QjJ5A/G+n5s09iQUyBu23CKujJK0qnUs/Jii2kYEgzCYorVC6D8cq0tEX0UpjhZLh
      Y/8KbSJ0q4qMYzpnX6eRv4CKFfn2bowtqGevMrjvN9FGMT3+fyEkZKseIlNEZXoxfkjDuYyw
      NCBAQzYapvep30VmC9cd+vWga1NsM9/Cyd8fS4cxhvr5DvldLrO1/QTFpxGlPoR4MMWRe4lk
      foJi/c/w+mIA4o6gGT9FMvAMwvHuoa4kBDJbwNtxFB030VmJDAS5dj+5Ti+eX0IzS0t8iFmM
      Z3GtYbpzF6id+y7OzmPY+55EDgyhLYMTe2Qef4FOto5xu9RHf0zi11Pzs4BOb5d2doYGZ2h6
      F1eIH0BCLBcwUffO3JvlEt5n2be4L8PM5UGCaoAz/h1M6/8Xg+KxU+Tm/gynFGGMIWwIFszn
      0Ds+iXA84DZDIW4VhaNfJFN/GtOcB2ERjv2EIJlEaEEl8yxedjdx0sYbfBSZr+ANH14WLzIP
      fYLB6h4sp4Ds3YFzziOyBDpuk+k/AFcFwjIIDSDQrlmme8sXxJ5OvcgNGxMFd+R+ZL5CtfNJ
      rOYreIX7YwMUFqjkCmbnbxEHk2CS+zKOBwpzo2R2h0hbYhJDfWEf8tiRNUXuKgMYYzCtBYKF
      CZy+3ahscaXj0gAU+5l54+t0uIBNnt59v423I1VY3VXtKHvFWWUV+7GK/eh2Hd2Yp/jQF/Ca
      VxCOi6oMMjT4d2g3z2EnDs3mOWQUYIUWSHBzOwm6sxjbwd33LNaif+GO3Gv/UboTl/AKE3es
      zZtFrmQIrryGOfSFDY7Dv20wSYxKJkAIokZCY7wHHv30hnJ3jQFMFDD76v9OV06jrZDs5DaK
      A7+MsRyUm8MZ2AdC0PfEf008N4rVu+uGX5pJYjCgKoPQtw0r2Y/xW5g4wj30MRzzPBhDrtsG
      HSNsL1WGlQ1GAwZhbfQA394NGzq1mPLgfdjtYSBsJ0SBxCm5BO69d4Q9aNCz4+QKVUAR+i76
      2K8jc+UN5e7eCqBssBTaCgHocJXu+DeQQmGkw4D5B7iDB5FuFmf7oU2bWPLQLltXjCGuXiWp
      T9O5/CqFR/8zVM8ws2/9AZ3oEllrGCe3Ay+7C3f/08hsARMFmDhGeJlFpVClK5Mxd9ZqYzS+
      rhCHk1jO3WeAFe+1IYkNc5c9otIxxN6P3meT7P2HCX3suZ/i9qazfys4hpXfSPxwNxnAGFx7
      Ox0zsnxJuwZNjMAwd/GPGcr+c1Shb0NV3WlgAp+Fc9/DzvVQPPJ3EFIRN2aZf+PrCBtiK4TR
      n5M3n0A3RxClBJ8r+P4VMtlhhJT44++xMPIiOmoy8MjvYIDa+F+Ty+8jaE/gFnegnBzenqcR
      8vYsOEJZWDuPELVOYvXcG4U4asW0ZiWVvYbhR33mJ0bwxfP3pO8HGuNvkPNmsXIW/pxB7v7I
      lkXvog5gaEeXMJZZt5sq/a6MQ2fkXdzBA6k4tAq62yYc+4A4niWsjlCMvwSOImrNooyine8g
      tSDj7URoTZAPMItbFnNxBWfvM0RzY0yPfhPhRJRzTxKMv0ez8TZhMYKrV4ickJZ5H6OhtzNH
      4eiXbvuORWWQ+OpRjDlz12bhpdUrmI1oTsZE+d0w2SRgiDB/+G9AEMJdhjEkJgcuRPWYIPc0
      srhxkl3CXZuqksY8cTLL+lAKoSWZZg8msplr/pD2+Mt0R99DBx2iyQskjTnCuQvMt36EbLXJ
      ZQ+B7RJMnkNKQabyWLoTLRwknhsnrI5hhAEDBkOm/DjCcmiO/hxhR4hIYMtBkokTJHYaDh1k
      W3jhIMYYVCxpzr9GcofMhnWdI7lD1tVrwRgwJotV+5B2u49w4JOIvr13v+MHHHphirL7M+yC
      RWvKhV2fvGb5u7YCBDPnSZxozTWZKMrWUyy4H2AcH2kEcq7GVOcbZMZ6KfV9koVz3yFXepRE
      GfxiQO/gUwghCGtjtKqvo2Ib4xoW3KvkFmrk2IOIFT1mH/TsIrPvU5g4pNseBxcciiSOptnb
      JfFSZtTK4PTspC//OHFtkqQxhek0Mbnybc/cbrVG4sRYGYu7oQwLITAaonqCKpSQ+NjBRZrB
      M5C5fafe33So2hvYvSZdCcpHEda190XclRXAGEOn9gGIFYuI0IJsMojK9WHsLul8rakVxxCO
      JtYLLEz9gI47jUwCZCJBQRiku8TyBz+NY3roOLMgBEYJOsU2ds8OZJIlzFgUjn4ZmS0QVycJ
      ZRWAyDSwOjF2uGJYtZsKMzmNGBshmH+PVn6CqVNfJ54du+17bzYXEF5yV7eASyUoPpTBdau0
      xUES4aCTv0ExyHcT0kMAUQfM0Nay/3LxuzEG022juw0wK/vF7Nij59F/QHX+7eVrCAlSYDBE
      XkiQbSMkBMEkKklns6B5MbXYWDY9H/vHVHKfxJiUoWQsEbZDtuFS2vbp5f51HKzMvQLCzizG
      BIhEABJhK7pqnG7nLEIbRCJIvITmyT/fdG/AzcAZyGJ7FtzCHukbgT8dkHTTgMX8DsXA8Bh+
      7sg15dy/LdBjr5BRH2CEQcsE9PWdgXeFAYSXo/+5/46i/ZE0jYmRWOTAcnCNgx3ZqFAiEkO6
      tSa1zS+ha6ZBpOJTq30G3UpncyEExSNfIKO3ka1lKeWfIe7M083V6Uy9t+quZMp7gLYMiWgi
      3R6MTLP7RF6CXwloDgSEuQRtJQhtUPU63Ve+Q3DhLUy8Vny7UbiuT9iJGXtd07wSbGCoJNG0
      2m20Tol4Sak1i9/DMFrzN0CQJidK2++1qV/oEMxEGG2wM5pMMgZxyN92qHgeJUNMbLAcjenM
      Xr/OF/7Jv/pa/Q5HgwohEJaNV9pDa/R1eiofp7jn86jyIG5hN3KyjvAjIi9YJSav5N6JVRdt
      RQgEUkOh95nlbHFCKiyTx+0/SGb/x2m89+f4mTmCaIKsewCV7wGTOkJENyCxYkJZA22WfRLL
      m7sEaDsNlRBGoloJYmaSBfk+yjfY/QduWieIdIF2NUccKjJ2Hbei1rTR8TtIKen4XbpBgO93
      8f0u3W5A1++CgG43oN1u43cDkkQTRRGetyLCOUWLuK2pT+XJVAIIO3QbNlR2bjakBwIm1dpT
      RpUKdJI+lztoLTOZHbSPn0cmbZweRdgAKpv7mJZwV0MhZK7E8KP/HFUZXiaCsDlD1TmNyC46
      uTbdariiOxhpSMLWmsSE3q40XMIEPm0xBjLVKOLGNPbgflS+gmUPIXFJ/A+JsxGR217V9tJW
      n6UxSLQytLfFdH2BV1dE1beIcruwdzx8XUVqNURlNxoXmd/J7KiHU71Iplct34/ruvh+F9u2
      sG2bKIowBqQQCCkWnXUxUggs28Jog1xFJMFCRPtyiJ1XJLs+R2Pme+R7IpxqnZtaA+6hw9oY
      g67NErz3U3RzHnv/k3THXyf32H+ONXTnLFfCyyMPf47u2F+S0W1yufM0Zs4hBx7eso564Td/
      82v1boT08lsWulEkcxPo0F/TlswU1syAVmEAa6aJ07bIFg9RKn8UFVlE4RxaLm3GWUlDqKUm
      mDqJamrswf2EZ99E9m5bXmWC868TeX6qGNfmyO54HiElOvRZqP8MlE7NpJvwmNexSJwVJkCA
      sUEagYoS/PlTtKePkxl+4qaYwLr6E3p4FVPaQbAAuYq//AyUlLiug2PbKKVwbBvHsbFtG9uy
      sCyF49i4roNtpUziOGnfcTehcyFKo2WLA7Sd3RhjEY2NE4sKpu+RG39Z98phYAz+6y8SvPOX
      BO4sxnJIqpcQukZr4W3iq5dw+h9G2HcmNEUWejD5vfhTFt1qCdOYQQwchNDfNPxFfea39n9t
      7upLJNPTJM05TJxArImrY8hc5box5cYY4uoE0cQ5pJej/u6fktn9NHphBhN01qQ5ARBSYhUG
      ieIWYfsq7cZFrNAg2g1iL17fOmBI7IhOcAEzOYk3cASZT82Vxm8xP/VjsFNlxwljrLiMKvRi
      9+wkmwziTEXopJOKRRjcuoWlbYwwZKIKnrWDQCysYVJtGYhAZxOyTYeo28QZfOiGxCETdrEW
      3iFoZSmXxrFMA6do3THHmMxBOBMTex5ZfY6QQQLvEGbXR6+5u+1ewhhDdPZNosvvE42cJJ48
      g8oEdAs+RkcExTrailEayDg4hf2IdRPl7UB4eUTffsTQw8jhQ+irp7Gq30fnHtnABJYQgBuR
      cAISiGYUJpZgxSQLR3F3fxHhZkGq5QdsogAT+AjbpT3yBo3xn5IVQwRXfPzsGMXZy4Qjp1Hl
      XrrVy+hggezu51GLWxTbE++x0PrrVPyzIQKMszT7m3WfoGKB03VIwnHYnhK7f/ktlPAoFZ+k
      7r+BUQZh9SDtLFgOQgicfY+jenfgVCdpjf4CFVhomrj5AyTdFrqocOw+wtoM3WwzfXgIjISg
      osnOKrpuAzn7Dtnmx1Gl61tadLtGqa+GbVlcvbIfNXKS7ICNcm9/s4y0JHbeonhUYefSUO5C
      +wMmm8+g73Rw323AtOt0T/8UqQ2h2yKuxGgvQTsGhM+jwzspljK89+4INMqY2XHi0bewDv8K
      4g5GsS4xlOzfj7l8huSDb0HvTkRmB7JvH8KyUS989YWv1borXlChQNgJQoGRMzROvEx16mXs
      Dlj9+9Jszq99G//0D2gvnKfWfQV0TDszQ+zUQEJYGyVpziIE1Opv0IpPEk6fwQqzqHwfbs9u
      4olLmLCB0Kljar3H2IkdXJMjkkHqQ6gWyB/8PNb2gwgpqb37DTr1d8jNSPJ7Pk8yfRHfraHH
      L6KqbdTQHoSykF6WuFNjvvkjuu4sXjtD9uCnsAp92OWdaCWQjYBYdtCyy6JGjBACLcGpSyzj
      ogYPYOWvvX0SQLhZ2pfbWMksYfExpN2iOBDeudlNCpSTrsphK2ay/hHMrmcfiAA4E0ck85O0
      Xv4DRLdO4nQJexOSnEZbGoShTJbHn91LruyhGxo/mqDSOwateYKmBcpFuBmEvDHDjGnNIiZ/
      jMns2DrCVyfo3G7s6Aw9/WfxxGn0zCkitqFe+Opnv1br1kiFQrmYCVmyJCSGrZggH9LuXkBU
      68hqk1r1JVq9TUI1B9Kgbb1GmY9Fm9Br4XMVrbrL11rt9wiunkytOO528gPPkM0dodU8vsYg
      60UV8pXn8eyHMI0aifHRVoKX3YOen6J98VVa6kMiL8TObMMZeAR//n2iTEDsBuS6Jarjf4Vb
      2InKVpCWS3jpTWIvJnTb2HEB7+GP45/6GZkDzyCiBNEOiJJ5jEp3jgkExgbLl3jOHuydR25o
      +6QQAvr20M0/AcVtiIl3yfeESHV7lrbV0avGGMJWwlTzo4g9zz0YxB/4dF75NqY2Tdy5THt3
      gG3bHOnfQavVIVQRGOix8mzf24tJDKNnp6gcdVEZgVsBy7+Mp95HzB8nSvoQ2Z7r9ism36SQ
      OYFf70WWhjBak4ydRWTyCMteVMAnMY05tOon432IVAI700UunFhtBVp86ayejVd9KsNC91Vq
      ndewpVo0X10vg8RaU4MQAl9cxZ/8v5FJmn68L/NLOEEZZdlYsYUzcBghsrRrJ/D1BIPFz9Oz
      71GIAnSniSr1U3AfxzpToFV/E7wY6WSwsnuA9zFKEBqfwK5Su/AX9Pf+M7oTJ4mclBGtSIKV
      Zq5xdxxDOBnswb3ITB5z4irNoTpGGgxJeiiGBOLopqJFhZSYboCYPkm2P0Hat078sZ+AAOVK
      tNbEHWi1e2hZj8Guw9dv4B4hPPsmZvokibTQeU0uytCfK/H84cPI8wKfgDhK2H0wzdcShwnW
      aolSgbtNIQCn0MHxv01j6rOIwSfXMHh86V1kNpMmKMgU0eVD1MNdyO27SWYuIqbeSn0AyTB6
      5BXo+BR7TtEijydWyF0IQaZXkG6VWpx+zTqHlGFdBjgBRhnCQszWZoT12ULXtgekq4ZIKIQD
      yFI/Qwf+GUYnCGmRNObpnP0JbichLBoaC6/T4+/F6t+FNbAb3W1DGNCd/gCRtcgUjxL7NVr6
      PEu20rYcQdsa1xTonn+Dbv1DEi+NF7WDHPmDv7KcLQIp6dQu0Z1+m2z5YaQJWUhOpCIghnZ/
      RNS4hPnFf8R9/Fewth+4IWXTXH6DcnQCq6TAuLdsdRES5s9JvH5BK3iYqP8IbB9KrWC31uQd
      R3jxBLpdRfQ/jKl9SNHK8buf+zJ+1GZgoEgxn+Xt0fPkd6e+DINBWhIZWYsr20pbZjGu184k
      lPyXaI5X0X3PIhd3E4piP8XgjwhnK3QHfhtRHIQ4QIx/l1LuPJShM6kQI9+guKOBqaSvuui1
      sORG26/Fsid27SCWsLjorvpVLJfaHEudrP9943VtOST1ScIkIY7qtGaP4+kyTmaYWecc2k2I
      zRz+xX9L/uohvOLDdBsXsVWBINMkdDu4U2eYXziDcBZnbARhNkgXrfIwAF3/LHiLLysfknQW
      sNwM9q5DmCSmOfFjQlXDdYexM4NY7RJaNRcnBEFU1LSScZKXv4E69Cy5J75wzRXBxCFucJGQ
      iLgd42Lf8hFLrWaRzr7P4efKaUqWW2rl7sEYgyr2ofp20Prxv+Hg7u18+Zc+RrHsURDpPZfL
      OSrjBUJW9mArW3Lg8A4ujY6jNt+rgpVJKDtv0ro6Qrj9t5CZIlJaCAE68KDbQtdmcOo/oDBU
      SxnJhVI5ARrAip/N2uLgEGvTGXrtLS5z5dLfdwTC0FYjtKNRWNLBMxDEU5QnR/HKio6bLv/G
      SWgmJ2kunEzLJQKygDFIpXASh5iAFf9Bmpu+Nv9zitbjRE53WbSLrYTmyEtUKn8/HYaycNUA
      tt1P/rGvIN0M0fEqtfAtVs8WQUUTlH0Ko69iqzzOoecQW2w9NH6D4nYfr+ylzq1bfGZJpKnK
      T6AqQ7dU/15ACIHdv4PuOz8isWIePXiQSqlERAsQSGGhTYRJNu7CM9qQJAkKhYkNwlqablfo
      TShBvneGavUCbH8S2hMEUZZo128h3Rz2uX9Dfti/5fFbSx3eWaxtzxjoakWCJK/Wx9isntMM
      2jKEmQTVEXBNnTN1bs17Hyw2sbS6rLQX2QEL8RsYSyMSEIlA4pDb/uSalnqe+4cgJEJKkmaV
      RusMgSWxBajVi5aATjnCOvkSwehx8p/73c0diNImapfwKvVN7vHGYIyhPltC7tx903XvNUqj
      x5mY+TH0GOJIMjPXJIg6SKkYuzzOwHARTxZptibxCvayrjl7pYbTm64SnSsuVl7g9AQIuZYJ
      kAKRLD7L/kOoyZ8ix3+AVr24xc46+USwVoIR6ybwtbghz8m1pc2VlWENIxlBbASBUQRakRiJ
      J2OCRGFJjRKrFe21olG7EmC314sMq8usoshl/dKwPrZPILATl5xzhHb9fbzQI/fYr2FvX5sa
      Y8W/EVI9/y0Su0E3sWgYSb+dkJ+2EcKi3eNjHKjv7pKdm0UvTCOHNzKAsF20HS1a09Kw7xsR
      gYwxJL5GZSSdeUMz8/HrKt/GaJIL76J2H0E4mcUAOgNRCGOvYvqPIYp9d2+HWhgw+ub3qRUa
      bF/o4/13T3Ph7GUc16W3p8yHH15idDRH2/cZ/HSeDCumynJvgWatgZWXZHeGVMcPIK2deNFb
      OLkOKqPBgN/owZSPwdgraG8YpKHUcy51hl5vfOvCXmAtPVu3M/cviRWbMcgS8c/cVkMAACAA
      SURBVFtCo4UgMZKusehqqIhgEwZY1a6CsLgxlFUgt7yRFW1FY/sKLQ3aTfcO294gJe9pcDX2
      0CNbEkM4N0o7OI1QkpzUZNJtZkjbI3/o11FnfkDHncEAXvYAamjfpu2gLDAWAitd/hA3tAjE
      HU37UoAuD9Lo+zyyeP0Mt/ryu7iTv0AlF/Dzh1GtMWRrDm/Aptg3x/zUPGHx16/f+S0ivnKe
      2G4wrHr4zc/8Ev39FbyMw9TkLEopDh56noWFGp7ncTa6uFxPICgMZpBXLchrhILy0Ic0g366
      e/8pfmMWWTuFkR4muwOn+pfkK1eJGmAXt05ocLPSzC37zldC2VYIbzVsabCJSYygYRRKaCyh
      yaoEW643n974oK+1Gi1J29o2lOQTtIMPsZxeGvPvUZDDqMEDsC6mx0Qh8fwEVs8w6AQvLNPN
      NLDkqnikJEblK2T2f5rOyLfId/twHtva/i6URct6inz351ieSRnhGjDaMDtSILKGkD29JHue
      RN4Ax5g4Irl0HNFXgeYkOcund2cDHYJdUAhh0WMmmL3yKnrnx67b3q0gmjhLdzhiiDIPHx5Y
      Ghn7DvYtfjOccp7kRKsHWR3kqPMG2bK9VIwoiHEXV27lCUR1EiMEsjwE5SEIu2Qmf59MTyoC
      OaXNgidvHkti0XUZYN2OXpZm7EUVZTmaM52d9WLDK+hqhY3GlQmWMOuI/2ZuxKzpebOVYIkJ
      E8tQS05gx5Js5QCN4E2qZpJ8O8FJnljDBJ3LrzE3/SKW8YiED54GJO1EkE3369Dp7ZI5/wqZ
      J79Iuf4JsC3sPWvFqA2jHTpGY+IUXv0KuQGZutg3K2cMCyOCbt8noXcPN5PPTVg21ke+THDl
      BD2ZWXJDdZRnYXlLfRmcgkRNjqC58wwQX71E2LwAZcPB4W0bfjcknG+Xea/dgxCCOLFozofL
      DBCHOk2MvEp0Fa5DPHIKZeahsh9R3IaO3VVt3rrMsqQPrG7jFjw0Ys3nasfZei8yQE7FVOyQ
      jIqxZbKunY0hEBv7WQ2zzGSs+mcWr6++plVC7CS4fQ8TiS6RF1GPjjPz5u+RtOvLLbarp8AC
      GSbkZzO4rdQ2rc0q+VFBNX6b5l99ncyTnydz7IXrPyUpCaMczVMhQe0am2sMhE2DKW4koBuC
      0YhSP1bewspYi1PS4sRkJP4chIMfv7W2r9mtJjr7On5pFoHg6O61yvrSs/MTBxAYo+kXZ+jd
      uWI5s2yJI9w19axkEjW0F1tM4I7/EfbYnyGade4E1jOPwdwsA6wmPL38LyW+zU9TX89xa9va
      7DubtrN13dXjSmF1FZl2kZ6+zyGypeWWnG6GKJjEf/dFknZ6DnBl5wsMlL/CwFP/kp7P/gvK
      uY9jhYKClSCFXmEvz+DnqoSnXrvhqMvQ7KDwSAa3snX5JNBou2eDaHajkD3bMNlBum2H1ZOB
      MYaF2Qpz9legZ9cttX0tBKPHaerjaFszoMo022tNkYYEg6GdpPdlT73H3t11LGfVbC8F5VIR
      Ha+8u0xvE2fsDwiLn0Znd5PvvUB2353J4boZrJXZYtWMLlaLF2uxGTGnc3myKfGvlLlZcWeV
      pWfpmlm09WzRlEGTXXDxyocoPvPbCKlovPeX5JzddOJLVPb/BiLW1CZfwq5eSU2YUiGtfBrp
      KQTe01+k9+cNauFJwkKM186iQodOqU7saMLTr+Icef6G9geIHYcw1VdTd+4WSMIElbVYHwh+
      MxCWS6P4BaKJkxTsEYywqEaPY4bTFDF30v6jux3C//TnBP4ItpEMVfr5x1/+ImpVrJNBEyaS
      txrbmDh1hXL1FYYPNZGWSxBobFumzixjiHVCFGhcS6WUqCA/3MJr/CGieHcTjC3qAJs5uDbz
      5G6NVO7Xi2rFkgh0I/XX+gCMEYueuyXL0Or4JKgnNlmZ4IgtYpA0dPMRle3PLpsPi49+kWjm
      Ermwid2zh6TbYmDnf49QNgZD1Jxcc0ySsGy8j/0a9iuTRMkUoedTDgdwmj34jGPvf3zNoX7X
      vDs3y0L7ELnyGYS1ts7yft8FCAZ/CW7DTCnL/UA/gd5FsLiX+W54jU0UErzzQ/zWe4S9MYlj
      OFKsrCF+AGMkLy/s5IxfoTz5cwrbqxjboV5r47guYRARhhFSCsrDRdof+phsuIYcrCJcP9bs
      Nu8nFYEWOxEs7pxaEie2sHBscX1JLl9xOlz/8SdGYBYzR4RashBvFdOeEktWJthbEb+BfC3H
      0MDfxR5+aNWABfbgfpwdj1I9821qp/+ftHgSgU5QbpFo5iI67BJPjxHXZpBejsqRX2fA+hR2
      lKVWHEH2D9Gz/++lh1DfBLHq7c/h19eab5cQNWMW7F/CbHL+8a1ASJUS/mLu++vBRAHmOpkT
      lIBeFVMxAf5Lf0R3+nXCniTNsSQNSbLxfbzf7OVMJ41v8LblGXqkjOvZZHMejq1QliSTdcnm
      PGxX3ddo1kUP0OIAlkQfI9Ikthi4xuK83uu2NPPfqKYeakFHWxRUTGgkBRWx3tm1WhRy5dbr
      iu0risOfxX3ouS1Hm+t9DHfgAMJyaLz/Ik5pJ63p12kl57AvZVAqRyy7DO78u9i7jmIN78dp
      fJzg6nHak+/glg5iH3jypmZrmckzN3GMIfs4bnGt2KQyEt2SqPtAACaO8F/6E7xP/QbiGmHe
      eUsw/90/gKRDoz1OZzAiTjRWkEZuTnQWOH1ilkpvgaHtBYSMeLs+sPyMFpx+dokanreiB9nO
      ynOoTbdI8sHyM/ATCwF46naEwhuHpCPAT72okpVsZsaY5bN1UwZZa93ZHEurgF61EmwObaCj
      LRIkrcQifwP+gS0Zy0Audxjn2Ke27E8IQWbvU8spst2hozgDB/Gye0AYwkwH35khtlrMXvxj
      kto0AKrYR/aRF+j71P+AiUOiqx9e5xlsMrxtj9OpW+nUsJgGBUCHBlEcuE7tuwNh2TiHnrmh
      PQ6D23Yw052kUwlpt31c16Hd6tDpdJluLTAyMsWrvziBVJp6ZOOv8nr7VEjCzVftoB0xNjVL
      x3OWz0cHaGv7bqVV2gCLVg66AjHqYrIgdnZBLhKy0Qgjlz2aRqxdLjczK93YXwJfWxjAQlO2
      rqXlb/Yk1uoYQgtyuz5+U3ti3YF9GJ2Q+M0NCneUCZk//Q2y1i6yhz+LzFcQUuEcfAqSm5+Z
      RKZAvfgluPwXaFUgX67hFCw6rQxi2/1LaKV2b/RlmLALylp+lu3YIB96Gvfiq0idIZ/JENkJ
      lZ6UcXKBy+MfeQidRBiTkGgrFWuXojDjGtLaqMxGQczI5auEZYuuVhgERSs1l8fmXh03JZAM
      tMEIlLMNK/c4TA5B3ULo1JUvjUB1BDJcsvHfrEVnMxiyMqYsfHrsYINVR+vFCIJ1SvJWyIrt
      2IMHb2kkKj+wZvYxGIyAjpqg0X4HlE0w8sHij4bww3dvug8hBKK8jfqOv09r528xP5ZFhwmd
      cPi207LfDtbL3sYYuq98N40jWkRsYF5kEEEaYRuXEkAjhEEIQ6JjevslO/akMVE9bsDHy5Og
      E+LRMwQzVT58eZqgFaETw/xYl/NnMpw81UO7rnEXRezIrDyHghVuaem7Y/e+SMUW0wor8xQ6
      CPGe/Ayulyce/QBj2mnyIvctvKBNu1XHH9SQCGRXoHOLmc0WRZ2b9dC12wGOY+P7MVobjNY4
      jkOcxERhhOOkdu1MdrXcvHkfrjd40xkRkrkJVN92vMpu1JxCO0ur25JTDYjSk2Sc7WlemXDi
      NK0rP8c5+ORNpUmBVORYqhPt/RIjb/8EsW/f/TmkbSvoBGv3IXDXKtEik8fyeuh6E8vqIhpU
      JNlVHMSyVzGxgScL80wHHqeTCLntIWabvbROjMLQQUJvCNGfR3caiEkfOXWW/HCEI+/tmWZL
      9Gp5R34DT5XW/GjvWTlY2tn/caKpS5iRPyNpTmPFClcrFlQX4+lNV4MbYQglJVob/E66VdF1
      XTp+lyjWKCWX0wF6WWu5zdXDX40wuHlPoVyMsW9PvUNiJ8t+7ZX2BYkTkcxfxRraA8YQTJ6k
      405SuPAuziPP3nSfSxDlYexPf/WW699JGKMRQqL9FsnEBay9RzekwhFCQKGCiK+wZDW0OgrH
      d/jYE4cYCyr0OR0KKqUHbRS1OIu1L6Uj2b+dYL5CNPIi0q4iVAnThIGj/uIif28U3s0gReb6
      CbHsoX3kHv8n5J2DFLoetlEUInfNuNe44Jf9AVvDy9q4rqLSk6fSUyCXd8gU8/T05imXM5TK
      WUrl7A3dRJTMUfvge2i/eUPlAYRSJLVZ6gtvIMTmzGp3BdWTf0xSvUow9j7N1rskjqEx/hNM
      0Lnhvh5UGK0hjomnRwnOvAKWveVKKnYfSE/YBGTgUtn9VYaf/oeU+of5T7UhYm0DCc1Y8d3Z
      HcxEKyEO4cmfErz9Lez+KaxKSNZqsmtAXtOmIhCEWq0RT+8Gbjg3qLAcnOGjxFOj2LUWopOO
      LMpu5axYyvV5jTtYchcs+h6UWJItV/3G4oqy2MxmFsNEdukGl8myDauy/br3sty9m8U1Jfzm
      2cWgrLWIMwmR0ya6+B4L3XdJvAAhJFY9wKaM6t3xQGRkuFks7RnovvNDdKtG/eKfYmxB9uHP
      bqmTWOUhZM1HdzuU9/wGzs7H0Nkynxlc4HCuTt6KAc37rR5OdnpYHQIej7+N/dCniMcmMLqN
      zmjiBY3dd+3I3lArpAC5xQS1vsatRInelLotHA/r4PPE2qCEQzbMI7tbNXH7XryVFQVCI/H1
      NSRmafAXTmOS5LrOHQDdrkMS4+18grz96CYlljgOOpUmxg5hUbTr9Me0zn4f02nc/E09CDAG
      gi5mfobowzfQKkC35pl/++sk9blNqwjLIffEr9H30f8Jd/ujtM69TDQ3welWGVuFGBGDSKN/
      pTFsd1LLnm7XME4HketBFHLgQDidkNhpYoVrGVSyKsYS13Osrm5jdZC+uE69FDdtb7K2P4zZ
      thvtlZFJgtuS6yw2N2a5uVkIuK6i5DfPc+UX/zPTr/8vtM+9lJr0tkKSYPwmGE0mv2fdULca
      96J5WBj8Uod48tJN3cODAiElSIl94DFMs46xoVuaxSQN5BanKS5DJ7S//+/pnvsRAO/XS2iz
      8s792EYDE2Hq1U+m3sYqnCca/ybCnUJmBPY2SRgmbOU03Vyv3Oz6aiLf/J1tHc8gbkBQ36yq
      snCO/irGSGRXkQ8d8k0HoiXT5YoHd6OXeJ1ss1UfyyrpShuO1FjXWQoDr0mcaeGrSWYWvsfc
      8X+3ZZ5/3Vyg86M/xmiN1tHyqK/PtGkZyxeYLWbLvxGwXVT/DqS0UV2B7AiKxeeva03TjXka
      5jzdrE88P85UrUs1cIm0ZCbIMBNnUzl1UTRMFq4QzRh08yrRrE/SSJ9vbDSJf+NSglk1u6+9
      qhevqzUSw/p6S1hf4pY8Dlbvdtynv4B2NE7gkI1sbD/d/7pZp9cawGa43U36ZnGWbpkLTL3x
      v9K5/BomideIRiKTwzn2CRDQqL61pSK8Ffy+mNrcz4inRm77VJn7BjeDcDzsVg4U1Js/J56/
      /jFRsWvI+HmiqQvUfvJ7+LWQn87v5JvTB5mL18b3GwSiF0SfQA4JYmOoLPTwXzz5GZ4vPMmO
      znaS9tZRw5uF06fELhc/V1LPp59Lea7Emhorn2sn4Fs2Q6vBPYjcTqJuDTptZOl6+S/Nqv9v
      DtcLq1hfdvm7MHStKYKpb+JOvATCIls4TPHYV5DlfuLaJDMn/h1d++pNjwgh6OY7NN74IzK7
      nsU98AyyULnJdu4PjNY03vgmujGOvfcASU2jul2iQht/4nUKvVvvH5ClPjLtCipOSOau4uQG
      +Xb3ELpdQ8gaMl9GNxcQXg5dHcOqzwCSKJcgLIFlKZ7be5SD+7ZjiNkfbeNPXpuCnN70DV/b
      pG6WhZiNZVbrBVtFE9zGCTFCKmTfDtSOwyCzNPR5jLWZEnLdlm64/I20t76MWLRGxKpNLJtY
      sUV2+zOQREx/8PsE9tVrSGQbf+gmqWVCCINRhiDfoe1/iLo0hbP/qQfeKqSbVbqX3iG4+BpR
      tg5dn8Lwp5BuH2E4ShTNIXUZu7TFDjVj0NURYqeN2/swMt9LdPoX2PufxARt7MnvkYtfIpoY
      w4y+SW5bFxlJ6gs+2IJH5EP0uv3ESYhr52k3NHPVBi2rCUKss/KlM/pGyhCrvq1mkM2evVlV
      UmASiFuGYCahOxvfniOyceVd1MQlvAMfIztqo11Fp2/FjX59L/F6Td2sUWeWYktX34oxYjmQ
      Lq+iTV3m18oFE8eNNNZC2eR7jlLt/vyG7zfWS7PNWhjb0HJHUMf/X7JHfnnLhFkPApLJERau
      fodoR4KIoDzwKaxtB7HMATonfkGcDwgv/4LMjsc3mES13yYceQetfUK7ShK9RSQiZMHAj/81
      g08prN7UjO0UJjA702ivMIzJnbKxzmToe7SP6akFzp6uoo1heLifku5hpj5PtK2Lu5xGfknt
      FesoQK76DkvZ+2Ct7rgeAklUT2iPR2SGbbLbHKR1C0rwapT2PgeJxtr5MPmB53GaVnoSo1kZ
      xPpdYZt5dNearOSav5fkvaXyXa2W/62OH9msr/W/GQwq9mm//efo+UmMXbqOTLb2R0tqPJUs
      p3RZatMIQ+D5zLZ/SDI9ep2ndn+htu0jE/aCAOOClhHR1CWq7/5b9OJBI5EzTXTxTcziwXsO
      CTvsLv/V8BT1qRdpexfQniHKBmBptGOQ/R3s7FKez3TVFUKkmeMsi8L2DF/51c+wd/8AR47t
      5ZEju/nEp5/g6GN7WOjMIwRYyxtr1m6vXU8bK1hhktXXN/6d1pOWIG4leBULYaUK9G2tADJf
      wT34HLo6iffsF9AzVyhfGqexKyB2k+XBbKaJb75srewEW7nxFTYBQ0bGJAhCowi0xJUbI1Sv
      teq0nDq5fAlZ7iPrb6e6IBBbZEdarbVcL+TDCIMyEh3fvf2rdwJJdZKQ9FwG5VvYO4YRlkcy
      76OdVKaO7Yj5hW/T6xUY2r6f7Ac/5anDe3nrzXfpWjFRN8EYjWVZxEmCpRT1dpeBOI0qsNZR
      lVSCQauf/Qf70pRJGAa3D6UOUKPYvXeAqxNXkNMSb0ilZ1Rs8bxXtbrJtY01VtOTPx3R92xu
      Mdo5xW3HYrkPPZ0GNtku7ke/ROfVf4u2Uq5byeCQYrVYsnZpW5q9N9cDBEvavQFhsDCUrYBg
      lWNsfT8rfawjbglzCz9kaHYXnQuvQHYj8W/GPFsxlCBd8WSo8KLyDe/Gul8wjSpSZajknyf/
      5AsIZdN844+R0kH4EXHGgIBMaxB7cD90msjI5/sv/gUzbh0/FyJlSlRRlBAEaU5WW+Ro1Tpk
      Cx5YG73JtU6Tvzr+Ko2oRa9TouwUKGayxFHCqe55eveUkLZg7mKd3A53Q/31M/x6+NMRcStB
      2gJvwEZ6S3SWMopOEpJQo0ON8lYEnzsSjLiUulqWenEYIKlOk7iasJCA0NcgntW4liKzukZa
      TgrIrNo1tPqhbCZ+rf4ttrtMX/h9tBOCWJtv6KZhoGSOUTz0q8we/wNM58bjke4H7MMfpf/h
      p5aPkQLwdj9L9OFVYgecpoV2bLCzdM7+lLnJdwntGm7OJrRjcvkl4kzrOo6F0hK7LgmnDaXy
      FvmPijF1t4E7oGiYJnXdIInSKGCvz0ZIgdFgC4dwIca5RiaN5TaNwWhD50qEU1F4/W4a0j0b
      E7cTrIIk6aRl3F4Lt9eiMxVR2LPCYHc2GlcqQqcDxpCdtpExdHs2pl7f6MyAFZV3a5GD5XIr
      5TcT4tOIRNBGYP1/5L3pk2TZed73O+eueXPPrL2ruqu36Z6e6dkBAhiAAEgQIGXClk0xTNpS
      kCIdYTsU4Q+KsP8JfbApf3KEHbJDcogWJStIM6ARSRALB+tgMHuv01291F6VlZWV293OOf5w
      M7OWrt4G0zM9g2cCqK6szLvlWd7leZ9XHp5tTLyDMh73MJ0MeGmJIDiBSVK0UBhAJX2CyhMU
      T/0GvZs/wbIk9txDdGr8GJBlgQcDwBhUc43w9psE4y/gTD6F9ArgBZj+Duvv/nOMG2IiQ8fv
      4UU2BzsXuT2LoGBjnxSkWrH6xg65mkvpmIccqj0bg0kY/C7odSOklKRKYUmJChP0oAQsN+vR
      XGgT7SikK8iNO6Pj7IXB0F9PSNsatyJxy9nEEwhykzZJRyIsCCYtjDZEjRQ7kFglSZJoHNsC
      DOJ/fa9hbsUfXlGGbjdp/uh/I7a3KTbH2CkuE5b2V/wPzZ/dl/Z79gd9gOENH/Ye0IhQYPz9
      AzfVgtBYFKz0HlGo/Tg4AYbnt/sO0+f/KTKooLZWaF/5a/xjzxGc+EJ2RUnMyo//GbK9RdE9
      jwhK+C/+FvIxjgYBYExGFxmwQNXaDfoLr+FOnGJz6c9QfsZ4FRHIbYHUEjVt9qVPZRfKNXdk
      chhjMDFMdGuIMYVRoGVKvhTg1xwEkm43JEmy3VtrQ6EQsLPTztrGui5pqkiSmLwbEDUSEpOQ
      m9ytvxiWlvaXE5ySxM5bSOvBdvBWq4clLdI0xXGcD78eQxarVL/4T9h5+9/TTt+m0BzDs7YG
      3VvunpDY7/AO/yVG7zDsNYD2Bk4N9KGbJGhHYwYmuKtgrDNGUnDoWouHsj0fBAVzklz1DOvv
      /R/EuknZf4bKF/6QdP0WRqUIyya8+CqJ3kDXFWH6OnbfZmLpFO6Jw0h2jxGEQHg50p1NotX3
      cNwKvegSzY0fjBqKQBYtUpMGlSjsdYEeEyPbQeehu5FSDnxOVI/QCHc4WZvhq19/hmazQxIr
      3rm8QDPXGB0v53n4roe1p3XU2NjBJGIeMEgjiFb3h9azEw/CraWHG8K+52YFWFgopR5NQZIM
      ipSe/c+xv3sNAoNXtjBFA0bAoZSDvbSke63Wh+8MxmjcVKI7hqijIHbwzAzFZ7+JrE2y9ca/
      ohNdJvXiA0fbHzc+uFN4kY1WfdbNt3BSSV7VyM08mfUVmz2TfSKJ6bbexliDHgRGYCWC6P2f
      4RxSXPI4Il28yE7jP5DKmI7qkxc+I/55lvTOnowF2CAUGEkWTUkEXz7+HF/+zHlcz2Lp9g6W
      kLx94RY3dm7TK/TohTFiCZychVYQrieMzVXoxiH5uTsd3iGMNkTtFMu7M3SOgDTUqHC/U3s/
      eCN1imxHeWQVecLLoydqyOWV0ZaZ+VxDzfz9MaBd+vSD0Sn2UmCFIOvwXhUUcjN4M78LXp5k
      8SJefZrqqd9G3RC0zduHHPHwCSeVoNDx6cp1bCFI8gp6TSp+xpbUjRVEvoSwHUonvkHZgI56
      xO98GxnU6fdvkI/6H2rf20cF7+wXGN84Snj1r9lRr9Fp95FSkiS7RELP81DbMWP5Ek4qmUzG
      mByrUq7kOXdqFtfP9D9/dPVNorEuwgZr3EIkAhxDMOtiVBZhcmoeIoR8kCPuxDh5K5toe7Ka
      OjVsXIowpOTn7xymQgrycy7hWoo/mTUiT3sG6Qks72BG+e54dBNASlyOkhxfBsfstWjYb8w8
      8BH3fGbvwfa8rkF1OvQX/gJtr2dJuRtdVHQbb22dTkUw7M9wGMlq/7mg70YU5hx6i4KUmMRP
      CS99D7u1hlWZpH/7pwT1s7hHnxx90q4eQVg21uYC8j6D/6hvsRIpfCloq8OvJW8JuspQsSU7
      qX4kWmlCWtiTx5j2f4veW7fpWE201kjpIq2sOyXaUI0LWMcs6MLK+ga3ojWEL2nGLaaWytxc
      W6fZb1Gfy+5bxZruYkz+qJsRRIfOrAU7Gx3K+SLthZDYncU3y5RP+ajQsN2apO89RSpvUa2/
      c1d6iXQETkXSvhKjZr6BsmqYRoNa7fs4h7pfd467R1uTna8g0sEpR/fwIHTjgxd69wmTOa4S
      gc625bEeht7odKrxFrL4FJbfoq5/hZ1onYZYxreTA2rVw+MNdigDbpBtXXIY69cWveR9nOU2
      cmccs3ST1K1gmzOjL8mqZbXG/n26yluAKwTjrkUjVpRtQcmWLIeKoi3wpWAt1kw4FjdUSmAJ
      yrbFzfDRFY+3y0coVl4m7v8HjNxl90JW85FWNGolIhGKdEyDNEhl8/Mb69Tat7CFTe1MgZ2F
      EBNCZaKIcOI7lCSNyUSBO6ZPMnaeeOY36V1/m/jS90gaIclzX0E4Lo7/c+w71pDdsaBTQ3+j
      hDr192FsDiuJUBh6LYuCrbAc0MqQbCvckoN0JIb9CuWP1EDVMh2aWvvs7YP04X02vcls+v3v
      ufekGSbKDlYBWW0Lu/Kr6H6ImmxgF1vMPvMHlN1TtJWz77wylgQ7Lvkdh3zboaw8rEqmHOmX
      bGr9pxgv/TYSm9BaI7FbFF7+fXJPfeUDEeB8S7ASK0qWIDbgSUGqM0PQFYLVWGOAUA/0+Ywh
      /AjUooTrIxLYF44Y+AFCCMJcgiqCsDI6ct6aZ+yzf4zeGMO3ParhGJOlCZzUozCZw8Ml2kkH
      3+vgWEiCOZduX9MPXkBIC2vmFKI0SeWpEiy+hn7/VfL51YyycUhkDqCzUSA999/B2BxqdQHr
      6v9Fof8XxDdS4i2IVjRu22fmyCReGJA098cewTzaHcDEmxjnkAztqLfTIPY+aCN0sF8sZu9r
      +y/+YD5hb2Z5GGQ1RiArk8TJX2K5GvoK3W/hqzYVO0amFk6aw0o8PLeHdZAFHAvk+iTe6V9H
      HB9j6a3/mfLk09SOfx1Zncpi6h8QfZXRuK72UgzQiDVy4Gw2kl1DZzPJVqzGXdTVPiiMSkHK
      wYiUo0mcqB20OySY7Z9w2td42y6FuS/Qa1+jJ24Tp9sYL4/12d8jvvIvyQUe0/NjlMtNOrrF
      +JkyK29tEYYKr+JglCHciJGuIKz/FlYta2UrgyK90sv0c0XkROZn7Wydx2/9FUFpk0Hj5n2L
      jbaqmDRBOi4y2iAXNHHL4FdA+pAu24yfyrrN1wsuuYbLRrMxyhkY8wgnEpi3rwAAIABJREFU
      gDEanayPdoA7B2z2/wdbZ+7+fdfGH/Z9M2TfmVZk6XgxPFcWT97dagdHlxVELj96RXlrhNf+
      lkRv4NiSeu8Mztg4Ou6RFi6wr445Fni5b+J89QtZ53eVMnns93Dnn0HYdxPxfXAMz6T2/By6
      AXs36eSQ135RqK2bsPQKwk7AKIQzjjIW2EWStbegAKNdNA3I558n7FxHmJTq5/4Rdn2WwuYS
      i+/9M2Knwerrf8L0r/xPqGf+iLd+8H/ieR6bK03SXIQb2BSncsRJCl2BtGH8TJ7tJRdKs/uu
      Sx6oQxD140TB76Eu/D/4wQap1viTFtLNzDPfukV3UOQkjn6G+P238JwthHNwYdQYFLm6Q01V
      6LdCEBB3k0e4AyiF0d37Egzu2mdr9LpBKUOaaKIoRkiBbdkkSYLjOAghSJIUz7PxLXdfnMjo
      BJErIFUWuxOOotW5SL5yCqcjwFojCW5AsGdCDnepvo99+vnRKi8sG+/US7/gQ3k8YDpbuLlb
      iEGsX8oNhqu9fQzyDZ8k0oR9Ta76DPlnfpeSHpQeSknv8neQsaASfIat+KeE1iadWz+mdPqr
      iF/5A362cAUvuoHa6JGf9EgamsmXSpnZJDK7vK1PIg9RxR6avsPvX+TKpM//MWb5b3ni5G3W
      32+RthWhDnGrku72Vci/mHXkmft9Wgv/N0FuC3vQWyCNFO2LEcGkjT0OhQmfwoQ3ut8PXBBz
      XwhJ2rgJ1nr26305Poxu/M5JIej3sxi+Y9sYA9KSqFShtcYYcBwb297lkmeFMClqYxXjr2c2
      bNsj0Odxy1W0fxVT649OPSS1CSMy06cdYLYV9szJD+d5DBBIQSAFkcn+nRio2JLoHva9N7pG
      cMQvvhuofp/ty6+xvRzi+hZRGmPICtWV0WhXURhzyZddZPE5ZOXYvu8lWnwXZ/oMwakv4SUF
      ujuX6PcuE19/k/yRzyKPnCWx5qi71/Acm8qxAtuLXZIwRUWGhZ9tEPZaWNUnQVqYqE907VtE
      N/8d8dKr6HYPKzeOcAY5AiGI1lexuzcYO14ml/eI1lM6zT5WeIs0fw7h5hCORxoGVOe+ylx7
      m82dLWbFUX7rxa8yVajx7sI13IK9r13bo/UBdMSwTagR9yprHPCADsx+yD4upaBYCjJ/YNh2
      9I5jDVs1ZcczGIQLmsuDd0soJaS5d7Kw7L6E3OBYfRCLNeyxc7jPv/yB2xbdC0U74ymhDBOu
      5GaocAey7yVLkLckK7FiwpF4UnA7UtQci61EkbMk7VRTtgWOEGwmH8wvkLkiuiKw2zYxIaSQ
      piqziW0HKSVhax5r5htY9WP7Pqv7HfqtG8jiGM7EPMHJX2U2mGHz8p/RdZdRb/xzKrPfwK+f
      IFf32Fxoce32BnGqsc00UrsIrbGCMaIf/mt61iZuBWTQweQFKjUI8z16V36CtOdQKkZKG811
      3o808brg9Pgs13pLuHUL4SbotVdI7f8M6eex556kJQwvP/Eyz8yeIecW8DyfilfiS0de5NbK
      OtvTjYGZ9AvWA9z3QbtjaK5kvxx0wPc/1nscxWC0oNPpIy2JbWe69JnZk+mHam1wXGufi3yw
      pzAMzu9mDsVen8QoIBKYSJD/2j/hQdTyPghK9qCUeyCK1htEeIYl3CVbspfSEg8WBGM0UZpS
      tl0U4EtJK/3gTnHSvImxFZ4lKVXyKKWznXWQkEw7RTj1exg3IF2+hHCLWGOZ4Jjw8yRmE5MO
      eEJC4M6cZnrsn7L5+r9A+lkbJdXv0NjQLMcthO2Rs57HmX8etfQ+SX8RpS/DmCHVPYy0oA9x
      HGOMQUqJ0h08s4O0BL7njNj/HdMjCDzG83W65R1MYrDEDkm/A36evFD87liDMVdBsYo0LhIb
      C5eZmRoTY3VeefeHuEezUfDIwqBCCNzSkxn94QESX3vDnncO3EGEIk4xGnq9kDRV9PsR/X5M
      vx/t6VQy9AKGXSOHjfzU6LWD1Ae5I5ErDl75y49s8EMW+VmJFRtxxiYdDuJmmoU8m4lmJVKj
      17YGK3wjSsBomqlGRz0a7fadz+ghkDQuIiQ4jkBKcBwJA0U+IQRaHkEjMN1tEAKrvqc+WGs8
      MY5b3r8z4HjUnvwHxK1VglNfwJk+Sav8VUxs0DKEsI+wbOy5M8hOASoJBArbtjE6W8RyOQ/X
      dZFS4rkuSZLguc6IliEQbMUt3lm7ytbtDmbJhnWbKJ3Hqk4C0DE213slpHHQJKSiR8b8CXBN
      lbxT5zdPfx13MSCNHvEOYE+fRqyeheQKpsJdIz67GEZ2Dn65BsexyOd9kkTh+x62bQ3amWqM
      NlhyYEax+7AOIvvb/mMbA2JVYHIu9pHP/AJ3e38MIzrDn5He/7O7xw9I9lxmIm2Q2Wt6fZG4
      NoWIsxZPH6QAxy2cJOq8c4AuMFgUNCDHs+M6PnZpf0JPWBa1L/33o3ph3dshWruMUJpkdYHi
      8d8YXZNdnca9MIkMG+jeRdLbE1hT8xjjgxYgwfczgtHw+/K84fckUKmDlHujgAYcKIznmHt2
      HMuWtBt9tjf2R5Mu9x3OyBbXVq9gtOSpY2fxfY9sr43JFSy+8uwLXLp5/RE6wWSriRUcIVn/
      GSK3WxhzmC793s9kb9v7WtZTVkiJbUtsRyItgWWJwe/WHdwPceiuc+eqKYRA9CRO7fNYx88/
      9qoOslxHuB6kCabX/kBcI5MmhOvvEIgcTjmL+Q8fedR5Fnns6wjHQ0gryxcMaoPp70AaY/od
      zOpF8MugNe2b36fZ+C6F6V8hOPXy7jN0cxhh0Y8u4PrPIXJFhJAIr4zu3gB/aOIN80Aio10M
      MmZyYKDIWOJGDl7o4iQ2MhGMHasABj/vIvtb9PsS5dfAGNT6dfrRT1GTKWEu5MrSAqur60zU
      i2DHpKKLFjGtRv/Drwc4DJ13/xScN8EINOn+fMB9Btz+XWPve4cDfD91wrCrFXPHan+33aEF
      jvwK3ku/9RB39YvBFVBxJD1l6NyFB3Q/mCTajZQ8zOdUiol6CMdDX/gTyM+DPQ12gJx+FhAE
      m+9QtZqUvR4FP6UTuVQLiqif8P6tawQzHksbLyFmnwfHI11fQOSK2KXx/edKE6IL38cqTSBz
      5Uw/yHaJLvwQazYg7VzHHf8ycftVtOrgFr+E2V7mdC7k3Ml5+j3F8amj3N5YwUyleIHDrcur
      +Ecktpcl8IwxxKFmbTWHJCUn2tSP5RFCjnZ9lWrCxYRnpo8zMVlha6vL1ebqR9OfIXf8G3Sv
      3UJ6zUHfsTu/8MNkTO6tuLbXnDksVX744B/+ZV9KrifRpnn/G/kQUXEk67FmypWE2lBzJK1E
      I4WgbAu2Eo02MOZKmknmI9Rdi26q2RlMmA8y+CHLaYhBGavjH0cHT6DcGkLa+NvXOOFeY+6s
      M6j+8gCPLGLvEPUkTkNi+QbP7ZIMzB0rXztUV1TYDv4zv06y9D5qZw2CMsLy8D/3TazKOEar
      jIy3fRqzdglqp5ibO8d/Md/BswrY5EkSzftrS5QLAQbF7OkJ3vvxNWY/m2V5hRC4vsXcsUyc
      TVDaQ0PPolvSEvizNpcuLLK00qSfT6kfKX80E8DKV3Hznyfd+Vvwe/tor3txR7ZYHFzxs3ft
      //3uXJG7nGS/uRRaWP55vPMf3eoPYCEoWoKeMhQtSVcZIgPjA8akBsqOxJeZeRJYGRvU+RAt
      NL29zvjkMo63gjGapGs44s4wPV+7473CZF1Do36K7duoRBCrYPS07yeqa0/NozZtdK+NdfTE
      SIN06EvIzjIysFDVSVqNi3Q6hqCcQyBZWl5mpbmC05shGbRvsgv7rRYhoNdLBqHczLFO0oRi
      oTDqPd1a7DD75DSOaxM4We+Jj6xDj3fkBezgCMnG26TidXCiQ82few/mw1mi++RJGFm0Bz65
      J5s0eKOM6ziV38B+5rmP3PZvJApPCnaUQWIoDAb+dqrxpSA10FGaxGRkOVRGhe4/hLV0t6CD
      MQa2blOK/w5vYsh+FfieRbwRs7fmcdj4PFtZYXlpHXfSIdwWmBjQ+oE4UcKysSfn7/6G2eey
      YHiaoG+9ij3/NYwSvP3+RdZZY+qJMSwpCZUCIzJmp9mjQ5TdGQJBHMWkKsWxHbTWWLbIfIOe
      wA/8QQ4o+8xHNgGEn8can0OWxjA3ffTGd5AIVCVLWB1e/3sQ5sC/7wyxPtAwViD6dbyT/xCr
      chcJwEeM2EA8MGU0sJNm/04MJIPXI80oQxw/pJugtlYzrdJDzCTZuMC49x3cym7oeMik7aY9
      0AIhD4pQZZidm+bq6nVydYfx/mvYy9vg5WmmVaL6E/uiUiYOqWy/jS9D1rwnoTh+x/EOIl2+
      iux02Wpv8KNbPyOOE06e3+UI+b6LQZH2U5o3m1SP5UfXHwR+lv8ZPKu9c19gYbsWQlhZONxk
      o+wj7dE2bBTnH/0sfvBzLKnoLkvSfo/YpJgBx0z0BLaUKFdjRmH5e0+KwxQd7ub0irBM7ux/
      i8zv7432acKwLuEgjEopxK/jVvck0owkXtcE/Rzl+iBSc5elpFQtMLE5zvrmOhO5OsfO5DAk
      GLPBzy802Rh/eWTe1Ftv8pknewgj2Fj9CStLglV5nNQpIarTCMvC9DuIbgNTGEd4OZJb75Cb
      kbzWfpPt7S7NRpeV1iZnTx5nbDqrGzYYxmfLVMI8N28tUj2az8xnoRlUb2QQ+3f+VCv67TjT
      LhJZruhjaVIo8lWi9Wdwe2/Dc/8D7s1/QaXYIOlkCSJZEbhFi7Sn2dqI0IUHW/5GN6sH2d14
      sL17IPbcqR08/ake/PeC6WwT5LdGvHwQ6EhQNCXOfPbEgFt1p+mktRnwgaA+WeHmjxc5+rXh
      7pmR3J45lbC28grrYYUN7wzOoGkeAsan8+iwwdmpJYxZYm3tLbaSMjOlNtXjFpubF+lva96J
      L+EWxnADh0anja4bNmny6pUmp9eP8eTTJxBWZv/bjkCFBhWB5ZkBS0YhRmSfLJAgyKJF4yfL
      LF1d5dT5Abdp0Br+I4cQAl19AbP+FmzfInXPg/09vFp2OcOV2w4kRd9hO4qRMYiEzGSSewx5
      gG0LVBFchSCCnsIpfglr9hzCckjWLqLDmxgZo50F9GbrAZJynx4Yk4kOIwRYAp1YYAzxtkb1
      DTOlaWaemkRrTWNrm5zvI61s0KRJgmXbpGmK52aKCm7O5ciR6dH3MFx4XM9ibj7PrIlpb/+M
      oODAnq7xSZTg+ln97rHjDsdIgRwGg6dbTJ8ss3N7kqDqsLnYQu+RMMSHK90btH/c5cWXzmG7
      NqsLDTZva26Gx5iqrHPkaA8GaoRidF4z+q631zqoGPqdiDCMSPqPSBXiXtD9LsIPkNUZYv4Q
      Z/FfEkbniaIcubH+HWaMP2FR2XARPngVm83rfVR1mFIV0A3wZv4+9pGnwWh0ax21s44M6tgT
      cwCjVL4Oe3Qu/AnKu4JubWJV7m+TfhKh21sI18dojcwVSBfewT7+NPS7lLuv4JUF9qrP/OwM
      rm/j5z2EEHS7PSzLIlUpQguU0qRpiutoHNchjKIRZcHaU+doDIRRhBSCVCk816VQ9lBaj7RD
      AbzAJerH+MF+v0Qg0IlmZ7WLdOHiuzfRZYMIDpiulmDFbPA3P/wxnnAwPZD+SdTxz7O8eYOx
      9qt4RTuTrkfvCRgOFtSCZOP2Fp3rOyihyBX9j34CyEGBijEGtbmG47h4uXWS8X+E2Pi3eJVM
      P2YYEhVCkJvYvczSuEezHYIHcm0K/wv/DXLE35FYtRms2uGOrfQDRCgx5QTdvPmpnQBIC7W5
      hAk7MDaHLNVwL36HvL5OvpaSLBmOzU9RHtvPe8rnA/KDxHK/HyJ9C9dxRs6k2Q2eHIg2GNI0
      HWRyDZ1uL9sxPA+lUirlLOegjaHXC3E8ZxCbHxTcA8FEjtvvtlmJplC5BlLuigynqSJOEoKc
      jxCCKIiJiIntFNN5g9zGC1jjx7m+fIP56RWCsjXKN+1V/PNzHqdfmuPG28vUT5WR0vr4GpUL
      IbCPnye5tYiTXICty0T138E0/hSv3MpiO+JOB9YrS9yGRWxr7MkX9gz+B4NTfY5UfwfVvYjV
      OkZ64yL2/DnkfYrYP0kQQRF76OMYQ1Ea/vGZAE8+m5HwWjt89/Kr+HkPP394Mi2Xu5NjtNdi
      tOy9oU+BlHIQf9cZnTqMcF0HzB4BY5O9t9PtAWZU1DREcdJD538beWscE72CGFBjU6VQqaLd
      6Q4Ich6pyhJcjmuTLP0bhP9HtGe+wnuNG0xvvE7Oi1heUEyd9Jg4kkW4XMfJJBgTgY2N49kf
      3wSALCrE8W+StF7CvvGvMOPPEIkXcdPvgn14yxxjDOUZl+5qiso/fIdx7+SXSd+9DJ6D8AKs
      I6fQ2xuIUv1T4xPsFeNyBPx+vYuL5scXXsfxs2q62bOT7Gx16Wz3qM9UHuretcoIiLvnyzR+
      hsgKlBwOHlJKMarpEFLgOA5SSBzHIZNMt3GvXoHZzxK99zYivzL43J77sR2UUlhWFqmybAvp
      dIne+P+wjpzDO/V5lpIjmF6LOP4xujeFvfo+QUHgeJLNG9tUThYQliRNPqYo0F4IITBuES1S
      zNKPsU7+Bu1rMYXCD0lUguPa2Ux3bMCgFFiepDhrYTlzPGynXuH65Ob/AcYocH248T0YP466
      dQn72JP3P8AnDHNuypir6fcVcSmkOFNhaPn6eY+ln2zS2GlTPhnguA82HKQlEVLQ2mhTHi/e
      8fe7zSUB+L6X+QB70jd7338quMUFcRqr9jK6/2eDiWLjOrvXprUZsUSHnxXeTdJ2CTeJQQi6
      t/4Op/kO4XP/I1fMU5hGC5l0sMIN9FYJhQeW9WjZoA8K4Xio3BnMxhugQB5/mXhbEu68hyHj
      /4dhQhQmKKVJkpRkxyCu96meOkfPPByZT/gFZK6EkBK1s401fRzdXEdIa1RE/2lAWWp+f6yH
      I6DT7bIarZEr7po2Qggm9CSfOfcc7ZU+zTCTQX8QFKt50lixfHWdQjVAWpIkSgGzb8Xei14r
      xAtcHNfOUpjizslSLlvcvr6DmTmP2kpA32Z7pwVktd9RHNMPI7QxmW8Qx9i2hQxAN7do3/45
      0cJ3iPQCn3/6HEW1Rb+vUbVjiOIYpjIHhQlEoY7IVz/+HWAIqzyBfuJ3MJ1VpBB4R7/ExLUN
      tqw3RvaolGKg/iDRyiKoTxE94C3oqM/2W69AY5Uo2cByAsrHXsaZO4vMl2DmBGpjERP1keOz
      o1jzJxlP5WJy0hBGEa8vvUntxJ2rdagySsrZ+VNMbo/x3s1L+DMOtnPv+w87Me62z1dOf4nN
      xhYrvVXG3XGM1KybdQpTuQN+woPBGJjI7XBbK9zT3yB88zLGbNPt9igU8nQ6XSwpSQRIaRGG
      fWzbxvNc7MkEd61BgiboO0zPT+D4NifjZX56PaQ1difl5bGZADBotDFgKSZas176LG73Cn4h
      60Iyiv4bg65ZbAZnkOoQrotWmHYDs7OKyNcR1RnSW5fwvDKyHuA5JwnTbdYufwv7yiuMf+GP
      sMsT2NMnMGk0yKJ9sieAF/d5wl2jsQVxnCA9cejKrMVuiX21UuFzxc9w4cZl2vkd8tU7HWGt
      NO3lPvPBPEfPzCCEoFapcErP0+70KZfynIzmuXL7Gg2rQXEqGHSUASFh8eIqbu4uu8zAJCoa
      KGy9SvfUryGcKpVCkUwjSlKrVjLzB5BCkPM9rEFvMSEE3pSDB1lPg2aX2nQF27GoWQ1ah5zy
      sZoAeyGkhSzWMVtmoFOzPwYn3RR75xK6dmdPW7PwCjnrNew8tG/OQ/UPcE8/j7On6D4whvKR
      F9m+8Nfc/OH/Qr50jMrJr+LaeUTwyc8S91cXeLN8hUIpq5suTR5u2pkDat22ZfHMyXNcu3WT
      xfXblCd2o2xxmGCteXxu/jN47n5tJCklYZRQ1BrXcTh/8iz9fsSlxau03G3KUwWEFMycnKBQ
      De5/A1e3uaA1snIe1b6S9XETZo/yx+B6D2nHBGD3LYr17NpvvLfOgv+lQx39x3YCAGDZKFPE
      mAbDgscMmfHo2j+gt/UUsnZk9BGjUhwWsAugOgZz7OvIocbM4Kfud0BnkifVoIR7+y2kZWeS
      KCqmeOkv2aEBwQmYfPGhQ62PA8TMKcLtq8yM3dunCe/S1O/k0WOUGyXevPgO+TmPfivkiD3L
      mSfuLhNj2xZSSozRKK0JghwvnH6GdqfD21cusrnV5PSL8w90/bmcDWmMO/s8yS1D2vl/EQ73
      ZTuajqFsFTl5cg7Htelu97nofRFROZwb9VhPAOG4mON/TG/pr3Dlm9iBGdUMCwTSBW/7z4h7
      n8PYFUT/NnRu4k1uohNDf8FCfvFO8SXh+iPCltVbpzJ1DFU/iWguwsLbiHgJu7yG7m6QvH4B
      nv+vSVYuYBWnsCfnMWmShXAfZ1gOfXmnzX8QKXcPJY/VqzzDU2xsNnn+2NygrvbuGCa1hJB7
      Wp5CsVDguZNPEZd69/UthqjWPYIb79OfeBp77jnSd3+OcRY42CpVRpLj7lFqfoWKV2ar0uDI
      6QmEFERhwus3KzBevWto6rGeAADCCzDz/ylh+2VM4zUC6zWsYPigBU6xiaP/I2iQRUEUKdhy
      kZHEm3qK+BA68HDwA5m5022ASjDlaThToKU1ur2GNXkqe0DGIPwCwh/sBCrN6AblsTuaSX9U
      MMZAHGZNuffGA/cg1Zks4D2XTcvckxc1Ua8jce47+IER5eHuELR2OuR8fyRq0A9DvIEShDZm
      0Lsru51z6iqXzRk6wsE79k3Chf8dv6+xLRuNJnYifmPuq3z2qedQWoGBn155HaU0jZU+b63P
      kM7du9bjsZ8AQMZNL49D+e/R334Rmm9hR2/jVdpgIG2BVQJhNCbRWDmJY7uElScwaYIJewjP
      P7SE0FRmMZXZ3SFSrCHgjsywO/v07vW4fubRfczdX/ROA2E7GJWOdHtGSBOS1RssJDb5Uo7x
      uSoHu/MIJMpK6cU7uF5GHbDIkRmbGombMUaFQhEicfaQzPajH8YjZ/dwZH+zpKTb62JZWdZY
      SEG700Epheu6lEtFDIb+7ZhffeE8SaPL23EFpEcx9zLV9fc4MX+S9fV1cnbAmz99h6vvXsey
      JKVSmRsh9JOniP0a8mj9vvUhH0lR/KOA0Qq1dh2Mwpp6Ar1xBXvj31MZs/CrDv2llLo7SVDy
      cX2bJDG8fWsczn7p7pmahzq/xuxsIisTH8LdfMBrSBNMaxNy+VGr2iHszff54rGreL5NtxWy
      s9HF1Ta2sLClNXIedaJ49uxp7EG/LpPYdLsJWoGFhzYKLydwA5XRh00wmiRZZE6ilGK71aVe
      272GbArFGDS9XsTfvfczxp8oZ8lNxyFOkow6YcygGYfIumw6ApVovHWH48cmWeo5vNI5Ts/Y
      zDgRX4zfxbEddrZiqtUaO60WidIsh+DUJrjWVjTq8w/8DD8RO8BhENLCnj49+t2aPEsq/iui
      +K+QOy1MD4pTLtXJAtvLHWra5eVzNX7wIamMCykxH3tTbIEoVLKM9gF44To6VYQdRVDySMKU
      k7lpJiYOpz1orWls9nA9C8uWCCEpljzAIkkSms0d8oUcxlGkDFThkNgmz2qjSa0ekNJFYKFJ
      UCLEoEDAlaWbTJ4rIW2BQ0aZyLLOu8IGZo86oEoV11bWWGgtghScsS6yU/ki1+IqU7NFBBFT
      E+No5bMV1Hmt67Ou3Wxhu9Pluyc+sRPgMFgTx+imf0B7p4Fdep83ry5zdqPHy8/OUyjk+NH2
      GHTEfZ3YXTUKc9cmd8YYTK+DQYAffCy+gLBtsA//CtvODG/9zU/IFT0qkwWOPDHO8soG45MB
      2oAU7siZ7PVilhZbHJuv4bqZbb642MLLZTpMr125hKxK0lWFh0PRzaExbPXb+JZDR4cU13I8
      98zJQzWfmmGbul0m2xfux98SdJp9nKOCoOINdKISzMr3GHd/jaudImUp+UmrwobJ0xmS7fae
      1nBPt2cvPlUTAEDYLlZtGlObhqOwZYVY/jKSmHhwu/eL4JibP8UojTf3LHG/dzhTNOohcnlE
      cP9Iy8cCv0CYOIxXc2xvtBEeJO2U6J2YXhjx+WeexPd8ktiwsdHlxMn6voTS7GyZ69cbxHGE
      VbPIV3NQy1b9OM2SZxU7u3cfn4uvLnBko87ExP52p0IIfOOilUZad/eZFt5eJl8OKNZytHrb
      VI9mpZkMFOGcWsJLjTd5ZetLmEOOI7aX0U4OkT/YbvXe+NRNgINYVz5/sVTnN0vX2O6ou64M
      pr+DWPk2dnqLY16Nwvn/hLPBOl0N325W6OvdRyUxaMcjXb2GDM5/KD7Fhw1RqtOefInFlfd4
      9lcn93F88pHg3Ys3OHV8hlYzYnKyikHx+tvXEBLiSFEr1Bif8ohjTXdPtt1gkCOKQ7ZT7mx2
      KY/n6fRCJoBdHVYGTa9TwtWY+pEycZjg+nsWIMOI1hz1Y1rXdqg/MchdjAoQDFEnYXljjXrw
      Q9YLT+N01yhZbYpih0B2Ga9Lvr90BvLVB1794ZdgAgA0rAKXmOGl2hYL1zRUpyCNEO0NTHES
      4bjoxR8yPnWJqKF49uzLXDUw5bfRRvGPc10UsBjmEUYw63d5Z03ypp3QfQwHP2Qrr/vU5+j3
      znF76fvUctskvZTKbAEv77DU36C7FqK1YenyGrZl0UlDZp4cR2+HmHZEkC/QbO3glCzuJkpg
      jKGz1SNv5wj7EZo4e6/IWJsXr92m8ESO1esNNhc1US/JGhDmHFSqiHsJjmczOV9lc6mFQCHt
      3bTnsG9DfsyjI/qcEhuctn9A4YiHZVlIYWEo0tzoo73CQxNYfikmQILFjzqTHMFm4ta/Q6an
      EP1t2qFHqR2zmIxRLr2drW6OoLO1yfPzFcKwh+d5OFLhGDiVazNMxLw4HTFXL/Fvrq6jSmN3
      9RU+boigxFL8GcbS7zL/5AQXfrLA9NkaSaooTORwHHvk87SuZc65dEX2AAAdhklEQVStm7PR
      7ZR+L2Vhc4Pp8b0moBmkHbJB2lpvky/7WFpSL2V5Em007124TZuI0pE8lisRlqC13uHkC7PE
      YUISKWzXwss5o/OnSYpfcUcreJbzNKPfC3Wf9lqbpKFJoyKV8XJWNCPgVrOArE0+9PN5PL+1
      RwAhBEu6wur0bxJvrNOlQuf41+jutCnq7+Hksn6uVhFuNBbJmyau5x0QfRIwSCwJJG5vlbN8
      i8rWjzDmUXTw/ZBQGmd506PfjqiNlVh+bxMd61EoVAiBTjXWSG3ByrrAA8I9xN4WgyCAMbQb
      PcqTeQrTOd65eoM3Ll3np5evEVcNteMlbDc75vSpOvW5Mhu3mji+Tb7s4w1IccPzt7Y7BGVv
      WDq2vwRzsAMVJ3PUTudJvJALb1xhc6VBY7PHcvDsBypo+sTmAX4RGK2xjaLk2jTXblLkX2O7
      g/pRIUn7irRpKIoiXzr9Ar0o5MSJcaQ1yECbTFzpp29dJZ1S7KyFLCXn6Fafy5I7jvfY0amN
      VljLF/jM3C0KBcmNd5c5+uzkyH1prrTJBwGFaoAx0LkeQ/Us1669SXXCZ3bWQQ5KFKNewubt
      JkmSMjZboVDJsbPZRStNZfLeQYHt9Q4q1ozN3kk4NMZw7Z3b1J4oDKrHMuHbIfNzL/rtGNlz
      mJit8dOLAVsTX/hAz+WXwgQ6CCEl+eUr2J1N5oKAlTjFyQ9i0kKglIKiYEfu8K3l78OKxXj9
      1ygPZVuEwphspWy1uozNF+DGuzRWfopdsJGtHONP/TYX+nXUY7LJCmmhZ8/z2s4EZ7pvMDlf
      p7HYws37tDuCOHToNXcIY8mNZo2GOI3RxzDzx1nRivb73+WpM1mDu7WFBnPnsgTgcNVtbXSY
      e3LXBInDlKgXU6wFmQBCoum2QsJ2xPZGBz/vkK/k9h1DCEG+kGfjWovJ09VRDfFeqcuol5D0
      UhzlMTFbZXM9Ziv/wZsX/lJOAIC416ZUnaD//pvExRhlGSzbwpISrUCpFMuSWLaDiOHGtTWe
      rR3hvXcXyQUua1vb/GzxfZIk5eX6k2y3dqiccBHCUJY2X6jfora4wLcb09j1uY/7dkfQxUku
      xF/BW76CCbvEnIVcAfISdjYhziHGdzO6QgiQkiX3Gdqvv0U/trGSCrXtkHxlNwFXnSqyutCk
      UA9wXYfG4g62Z9FcXUMrg+3YFGo56keqlMaLNFfbrC+2cF2H+mwZgaHT7BOaHo5nsXalSXmm
      gJe3aS5mlBcVGiqVMpVigXw5R9hXvNs6CbV7C/PeC7+0E0A+8RLd7VXEsTOUuYYMsjY9w1j4
      0MaVUqLrklNnpzHG0E36/OnPvo/xDFiCScpIWxJ4PipKsVzJdthBa82P3/o2ifv0YzUBIOMy
      xdPPZP/e+4fK3Z1IU5qkVfo6AHrpKtfWFnm2moz+nq/kaK53Wbq0DlZWvF6rl3DyDpZlDVSb
      s5oBy5IUxgMsW9LbiVi+skllqoBfcNlqaibPVjBG01rp0l7rUp4K2Lkdcur80dFuEUean92e
      Iayf+YWexS/tBOhpQbvXp6T/ErecKQ1bEoQY6olC0jH0mxG9rZTVtXVOFqeYqJVxEos4l9W/
      hmlMEqYIR7Lwoy024zblXJ6VjW9zK93A6b6Ou/1ZrHsMrk8a5JHThNevcuUnyxRqAd3tPrmC
      R9RPKFRy2I5FcSyP4zmMqA7GoJQm8F2UVtiOi9aacjVPp9GlOlVECMit51CpwrIFlZksHxCH
      KUE+GAx+weZ6xHvN4/THzv3C9/KpmwDGGEjj+zaPSDdu0r/150g7pOg4WJ51B5uxuxSz1u6g
      S4a/fecd3rt5mzca14mLyYhG0HJ6/M133iT2UhhYDk3Roak7YIFy2qQ33kY++7VPjeyKifq4
      vTVkXjJzeoz1m02iXsKJZ6cRQnD70gZ138F2hurdg88ZO5Mrl5kmqevZLF/d5Ni5KYYNtGMd
      UbQOZOpHLoBgYREu80UY+3Cq9j51EyB+5/vI0hj27BN3pTwYY+iv/JAkWGYr1bSuCezEojzm
      Uzq6O3GU1JlEnxTcZJ2b3XXIHRDrkhAX7s5vcdcdQn6E9iTukeeQQSmrR/gkT4Z+myPzeSaO
      ZbZ3darIxq3tjOpgsvHa7UaZ6gOZFtCQ+dkPQxzbxrJt4laMZVsgJM3YYWuxSXluVzkQ2Ldo
      3Fg0XBafB//Dq9D71E0Aa/o4wghMbwdROpwaqDtN0uRdcMFIgypC2kjZabSYNSVKRzMSVmnK
      Y+N6b1CTzEOl2IeIJmOMHWMW/4Z26xVsVSbnn8c//5tZs7tPCIxKR4VETm+N2tks3KlShe1Y
      6EGb2o3b25THCzhOJsAFWdRNKTWoFLOyDK6U9FsRO+sdZN/nHTWOm+Yo6PcRU3Kg5Z+d2/Zs
      Vrf6LE1/7kMd/PApnAD2+J1F8gchhMRq5lATMaRgOhA6KcaD5WabbifJalqNg/Hu1eH+/hiS
      FaPxrPY2YYtUfR/9wwaMT+BVziAcH1GoIB9XYh37q+iSibNcv73K0YmI628tE5Q8cnkPgUCl
      mvHxrOjdGDurK7Alu83Qd4/TbXZQKmVuuk7fPc4TQYfjQZHrCyvc6q/iTdlIW7CxKlgsfxWR
      +/Cfz6duAjwQbBvtlNC6SbphSKpqlBNPcppNeogEzBqI44/GVOkF72Hi9+iufAcAS+cI6l/H
      P/HFfbQKoxUI+Vj5D8J2WPC/QHTtbxibLDB9MqNKtLd6+IFLEmu0MoRhjOfbxLEYySLujbQh
      LKaPVqkUDV8vLg7U+i1OzB/hSDTB9y+8QXDM41b3HGLy/gvbPhzWJuYQPB5Zmo8YnZs/Jkxu
      oNYMSVnvfwoG7G2J07Po15O7HuODQiDAIuuGI8iWIBuU26fd+nN6F/+cZPUaJhmoNTymHCO8
      PMtjv85Wy+Paz5e48pNbxGFCdapIHKXEcYrnOyhlBuaQYqfVRWsI+wn9XoywLXJ9m1IpANSI
      RWqEwvMlXzx3nsaNGsnY2Ye+PBOH6LB73/f9Uu4AbjBJqyDAypzXvQ6X1ZaICmDfjf/4wfBA
      ZpSEbvQqnduvUtj6Cvlz33ysVv474BdYsc7yUvEiti0xiWF7eYfCRAEpZFaDLCBNNb7vEAQu
      QgjiSGLQ1GbKjHnjgMEIDXuKZQzg5yz6s19EJA83TI1SCC/3QIbrY7q8PFp4s09Rq/w9jN7l
      tQ871Fup+HhF4QQIB+Kd9z7Gi3hwmLlznD7zNC88eYwXn5ynqF2ENGijWL/cYH1hC2EMtiOQ
      Fghp8HISP2dTrvv8ZCkm1Xd/4Mf9h5U/ZsTDMun9d/D7TgAThxj9GDMdPwCEkASnv4xvn4MB
      39yYLH5nrA9z3R+c75C1yAz+uxuGnQwfd2gE73Z26dLHj43TXegQ3u7x/BNHeXpmhk6jd+hn
      u80eTvcGi4utrBnEACpN0TqrOrP3SDc+LB5Eu+m+e4twvKzlZmV8XyTgkw5h2dSO/zarFy9h
      HEMmLCQwGmRXQA6MNohhZ2pNti8/4O5gDCil75Du0yrrWZIxK+8ywI3Ar77wickVaLO7jnqe
      w4vnj49+j+MUvXnnfapEsbXWYubJMis762y926CeL3JktoaQGltmg7fixIfqHul+F2HbCNv9
      hZ7TA3Q4FsjaFHpr9QOf5HGFXZsm8J5CCEESZZGLpKJQqcZsGWQ00LLpCsbwKe+49zniLtJE
      sd3s0m1H9PuKTiem30vpdmPCfnz3DxrwOEPu5K//orf3keF2lEfdxYxxXRs7ESNu1RAGkLbA
      9W2KEzmcYw7vLN3i7avL+xaHOb9NpbWw77MAws+BZWdRMgbcLbU/IWmUuq8Z9EBLuhACa3z2
      Qd76iUPh6FfovX+BMOyhejG2JbPCEAlB02W8n6PypIsdSLq3E7ZVtKdL5b2QNXZIlcZ2IOyH
      OE5GDEMMjaI7j+PpE5Se/cPHX3pxD5qpR1e7lGT/kL9K6rkCnes9Lt1cZmy2Qr6cw3IkbrC/
      NjhXdFludgiurmIJSbsXE8uEUs+lWT6+76hCyH2PTwgBByyUzBe495b96bFpPiCc8eMUVj9L
      N/ouucCm2+lj2TbYhnZ+wBPKZRnb/BGH6nWfMEkJPXXo0xs2ZHNcSdkZErgMnrfLXREDfdN9
      MGB3PArnf+cTNfgBjnodStbhu5pAMD5WJufbtHIRXuAQdiL6jZg0VITtmKnTNYw2aAV4wLRN
      qg0FO3t+7eshGA3izsFs0oTc+39L//TXPlAR0h0mUOYMmv2/f4ohhKB49Cv4Tg7HkVRrBfJ5
      l1zgUCi4ONZuEkpIQf2Uz8wTeSbcgGLPZb/MjThwbBgOdCHM6H+H2v4aikd/D+suKsaPKyw0
      X6/fHjE1D8Kg+NF7l1mIGxTHAnIlj+pMkekzNfySg1/I9Ila612KYwGOa5HGCsuxdmuDBYce
      G8C9+l2eOxNhNW9+oOuXACaO0NsbmCTCtJv7balBretB++rTBFmokvfP7EaDACkydTTHlqPX
      hlEbYQmKsw71k16WNxj9l2H/bw8IA1a+9mHd0keGOa9H3k7ueAIMutCDwA0cimPBvo4xQggm
      TlSxXYvVK1voGLqNPg4Jqwtb+86RcxVEd0aSdGOZJ6e3KNU9fHVY+4v7I7si28EIienuoHtt
      SCKMSjMHQutMSe1TFAE6CGE71M7/Q4ru5yCSaD1QTEaMlNKGYdK9kJbAUgLR5wNlzfaFQSWo
      6OFj3h835t1kl3WAhcRBYiOxBj+zzvAHFwSBYO3mFjcvLuMHHtPH68ydnUCnmiTekxAzhpVu
      DbzdphqmuUqw+BOekT9g5mSN1mZIGh7e5+B+sLMQk8Qq1QbNiweedbuZtQ6V2QpotM62uU9I
      aO5hIb2A8rP/JfmtL9Je+I90kwsg9UBGUGZRe6MHasnZZ4QUTJ3OEW4oNuKseffDYtQQPJXI
      4CGFLR8D9DfWuN5cZby+25fYAPm8NwoBTwRl+v0EBLh+RoteXtigI3YoPuWwFa2z9P+3dyY9
      chzZAf5eRGRmrb2yye7mvgxFSZQ1GmkwY2MwgAwDhmwYAwM+GIZ9sAGf/GP8J3z11Qcf7INh
      zMgzo7ElizOmKIoi2U02yV6qa8/MiPAhs3qtbm7FbnV3fgTJqqwtKite5NvivV8+4u13ryFe
      mMw31nfbKd8+jnhU/WCjOofvd/h++HPOXKkiMo7HkyTQm7j2SlFd41pr+L5s9sktVRAT4m0C
      cRfnHFKusbFeOXdoNfHfNCJCMH2Oyam/xdz6F1pf/ztyeTNK7CWfsFkHbwCCusZUFb2vHE32
      cW/uYGcQTPmxXRWejwILK78luq5ZWFrZqMkpIpgFTUlp2st9GqstGkkXFAQVTVjXuKmYqJJp
      FaasieY8vXafczdmQODBgue37Zu4ybPb5ps0HnPqanlj85LHs9IpoyZfrdG5UfVJVLTlA/Kd
      VGLCbNUf7M6xFkwANoVjKgADRBT1t/+E9YdfsPz4GfW5KHN95nN2sGrbviNd96iS7BvVHZT3
      235k+5W0VLuZNbs4YjyNbnDZf83E3PA8/V63zZX3L5D0U8KS4d7vFolPtQl2eGzStqM0FSJK
      uPutcEc+xE9P7bKkXHmCTjNhfDp/vYfV+NUXjiFeILep8oQl0Bq8R0yQ6XLBiweDjjKiFCqs
      0u2l2zISBhM9eeqpM87Za6eZKI/T7aYvIAR7kArhqXdHM/ADpjd5nYWFvb+3NgqlhKiczZ8L
      35uDxZCkvSPFQWV7Cb7+2nI7+il+D4eAlGp0O5upOb1OQsOcHfpcALe6hI97245t2LcMEQDZ
      yD0fWDYKRPC5Fe7jHr4/LOBx/DDlSXo40rbbZeQaAurnSuhQUZ2N9umy/nybqRL9AHP62muN
      dSZQnAr214KrOrvulJVQfqFg3vMRpXmYXMUmL6aBa6P43s0LJEtgk82JHCYR1YkytShzvOxF
      deUWM3NZORbvPU+fWvz4btdxtohbpD4FOxZt0WYj1rLnqDf0roELcDAoUcdeBRrg0x6JdrQe
      Jax80+PR7TZrt/ssfN5CbdVLEcZKJWqdCIY6I3b7/gdeJRVHlGY+eu3aokaE2GWfMRMoZvOS
      htOBYjpQCDBpFFoyQZgOFOGI/Bn9qevce2B2tU96+OXToQuD0opr1y6y/kVM60Gf1r2Y8+fn
      EYTJKY1a2cOn7z2Xy/e2uVOfdKeGBg5FBFE611z2PrfGpyneyY4amFveKD8+qIMvQYjvdTKP
      yKF3SHlz+KRPp3kfJYrFx210DdIxi+9aqCiSpSfUZ0uU82KuV3+UVUq79YtFGvTYsAiHoPoB
      Jf8OemwWM3sJM3v9tcZqBNrOUTOKdWsJlWDzhaucN5Ue/E19tur1nMeOKMYp2rAWjwFr244r
      kaw32Q763YTHj55y4cfTmFCzcqdDdSybS1ElJJR4+DoiwmoywXky9cVZzzP3eoFDI8YgTm3b
      9Pw8pPQCjY6POt5j0z6ozN3pqlmOu5Qz9bAdxnz667vMlOtcvXma0liAIMzPTWAfrNIq99mo
      iTP4N9HUqj8lmn0PM3tpZENNPSQOHueNK57GliSf3E9iu3HteRJnjy8nDgRePdF4N44h6RtD
      BCxNLIv3lhi7Em5E2EvTmrUnLSbP1Om1E2K1d2/jri1DLgBLD9v4mcuvsWN7SzbLcQ50vQre
      e5x3BIlCTglOZ3aAsOkCtRXHY99g+dctrpw5zfl3ppi8WOXe75ah5POtBnn0ODWMz/8N0fzN
      NxJL6brN2RZvmXhbbw+EwsJot7sBrXCOfmuBsLapSTQbHXrtGBNqHn3zjOm5CRa/WaJ22Wzb
      6eY9dFp9ltZr3Hc3cPtM6rXKVe7c/RXiHQ+SG0j99dTxfWd9JND3UNdCy+7v4zhuuE4DLwmb
      U3iP6hACqXFEUXYqk66lk/RQHYWrbp6xUC4TnX3vIIZ+KPhSnV7PE9Y2HShBVbO8sIbXHn06
      5fHyI8rnAkykGaRJ2NTSWUzpNDosXfpj1Nhu1+e2z6md4iv7R1lG7QhsUSXAmVAxmRsWk0Yx
      kWd4zec/6rhRzEUnw/AdkKw+wmmHdgrrE6yz2xpKy5Y/Qaxpr/dZur3Ol/+1QCou2/S+7Q3T
      ke/w0mQGL2S6vgBVJfsat5psYRu8ZmREVZbXoyxSPkj2VtCy6+hTlrBiGJsvE9UC2PocATGe
      Xtx+4TiIaDOyYKwpKaGZgpZsWCUluDBExY527vmJnT+uGRB70lm5g7YeNeFJA5enQ+T9AbYl
      fXmSiuVu7ym0IeoEBGcywzgLj2Wqk6mcHrnqMx1spmXMhIrFvqWshW7iKavM0/Owbxk3Qk0r
      nsWWqlakPisEbAQqSqgZYTl2r2UTiFI80O8T3vk36uMhtckK/X7K3PUJEI/3grVuI8/KiMI5
      R1BSnLpRYz0YP5RAoOm5rBjFWpL9vB3n6NnsdivNW+fY3X7w44z3nu7qVwSpwlVcPs3djom/
      FcE7T6kVIDN5NYTsnRAE4+aovP2nIx1jKFDWm+OInSfNClbjgAkjhPkKH4rQzX9TI9CwnprO
      jo0ZRTP1IzGI7dgc95be4kL7M1Ybq9QuhDRbnaz6izHEcYIxmm4z5qI9h1eOznyTp0sRK7Wf
      jGAEL4/xQCPdnN1bb3dyw6p/vPbEP580weGyQk7ebeSdDC9Rkh0LVjQu8ugdK0WcGCbmP0GN
      uKSfB+73LCYf0lqa/UhreXBpNfWs5V6hwWOJh9X8dsf6jfvRCK9Mveo1dPglY5OabqePMVlB
      XOcd5UqETS2hCeg3Ulr1dVQHHvR/CFMv1950VBSunyF4m9DrNgijPKAiW1f+rD9Ydjl3mEBl
      LlM8sU4pLxnMhEZKkDhFoG8SzL18YafnMfDoDP7v5YtUf+O+3/XcrbcHK7710BmhbaJqEywu
      neWt6cdEpRCtFWlqMSZrhhdFGqrQG2tSLmlufz2Lm7n4Wq7M12GoAESSuc8qWkjyE5l6OCkX
      AhWWIQ2wvktrvYvRGu8hjmPCMMR7cM4ShiHdriXwmn4rplQr0aklBE1HyQVUKu8ycfMvj232
      7F40ovfoNR/SSXqEQZA3GtF4PEZrrLWEUcDdb6ZpTH98qMW/1MD7U8vD4wAlnUUPZwJF6rP7
      mV6pGNfH3xoWG4P08bGjFGWVorPV3qC1JgwDwjAL5IRhACmoQG0oP0lkkUaZ+qVPDmR/rwJO
      B4oJ83rpFKNC95ZRRmO0JrUObQxRlPUFBug0+yzem2F58tX28Y4SU8kndE0LT+JsjY/yZLh2
      bjiVldDEEyl4Gh9/a7i38ggX9gm8Rkcea4VSOUBrlbv5tmNSTRwIiWRJguIV49d/hjmgrjBj
      RtGwbsOVfTpUdKynYz2zkWY9dbSt51Sg6DtP03rmI03XeVaS0V/X3fh5nt77BXNvlWmvOVaf
      VYhtCeVKdNJTdKPz6NnLQ8/lQWOyE6BoWk8lD3g1rUeAZp4ssp5mwaCe84RqU988rnSffIWT
      FF2KcGIxRjYyZP2QgJiteCblffTkBeLeKmHlNNHlDw9svKGCrs30+ZIS+g7auYcnyXN+alrQ
      AlqESHna1mHekOoh5TqLU3/BkztfkdSuIONju9TA78oUMoMQentLZtTg2MCQGtzf6iE6rvgk
      ZnnhPxAvw6pwMCzJzStHO77F7NmfUauOpnXPy7CcOMa04lnisqKyKlOLmqljzCh6zqMlyxhd
      TzPvVtPu9liNEqmMYSsffgfW+P35ro/vwOl9+wV9+4xyarDjmc6600gblhSSBj36i58fyBh3
      YnN35mBUa7lf35G5QAdZoKtpFuxKffaaE6DNPpdCAHbQWPgUL3nDDDXM958lFu8sbquTKtH8
      7x3kUAtGgNKSeXsCgUhl3gQFBJIZU5os6ngmVJSOubh470GXsizOZL/l0SOxQF+hOyEVeZuZ
      63+HOgT1p+D1MJNG8aDjSD2cyd2eSqCqFVHe1qamFW3rCUXoHeOcCBGhPH4WaQimonCy93et
      2UuMv/9XqNrkkStlWLCJalrPuMm2zDVTj/cDHdHTs1l+Sc95Eu9pu+M7+Qc0Hn6KsQpXGvJd
      PRtl0qOJi+iJ08XkP+KYvvPZDiGy3J9B/k8zd4cOjp8EvLN0e6uETjNsg5Ppa8amPyFNnhGc
      /f7BD7Bg5BS5QFtwrTWm5SzSXabtW7uUPacdoZmgevFHqNrEoYyxYLQcc7P25bCNZwSVMfqR
      xQ1ZGpzx9O/+HNs9ejU8C4ZTCMAWxHtMfZaO6aB6ux8P4xq1j/+e4AWacRccDQoByPHeYRfv
      4u78hiAVVHvHqfGg1QSqtHfFgoKjR2EDDHAecRahRxxayluLKTmomw+oX/nDwxtfwRuhEIAc
      n8Z07n9GLH28eFx1M10rSqeY/PCvT0xd1JNEoQLlJA9v46dPsT7eR5xsbVtLotfpP/wNbkiX
      koKjTSEAOcH8VSJfRxyEymxrduF0ytLjf6J3/1eHN8CCN0IhADnpt7dw394iSA3D+r2V1Dmi
      2aNZwrxgbwobIMe3m6TGZS1+6tsfC9MpZn7wDyOv7FBw+BRXgAHVOhpNYDS+vCUG7IRq9e1i
      8h9TCgHIkSBCvEbFCmlu6j9j0UfU3/nzQxxZwZukEIAcc+YiKqzgvIMtzp6gNLPRN20YoXeM
      qQTzndnlWvAyFAIwQGm8d9SaEeV2gDwTZEXoPPofvN2jcKD3vFNZ561ykRt0VCkEIEfKNYL3
      fkISgUZj4oCgU8c0BJI9mjCL8N/dCX7ZniYtTuWRpPjVckQEPXuJ0JYIraZMBReM0UoWiZ99
      c9jDK3hDFAKwBTN7ifCd38cnQtSFcmyx2rJ6/59x7dWDGYT3I+8jULA3hQDsIPzgY6If/hlp
      qlCtBrVeibS7zJPP/pHO5/+apUzY9M0NQITqPnuRC0ZLEQjbgQQh4bs/Rk+dpv+//4la+D/C
      5lnMmctElz9CRZU33ia2XaxLB0YhAEMQEcz8VfTcFXy7QXLvFsHFG6j68O7lBUeXQgD2QUSQ
      2gTRzT847KEUvCGKa23BiaYQgIITTSEABSeaQgAKTjSFABScaAoBKDjRFAJQcKIpBKDgRFMI
      QMGJphCAUVDkrh1ZCgEYBYMtxIUgHDmKXKBR4D1XIkfDCt7DiivWlaPC/wNCXiqllsfkIQAA
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
